cscope 15 $HOME/mycode -q 0000001568 0000152881
	@dqueue.h

11 #i‚de‡
__DQUEUE_H__


12 
	#__DQUEUE_H__


	)

14 
	~<°dboﬁ.h
>

15 
	~<°ddef.h
>

17 
	sdl_node


19 *
	md©a
;

20 
dl_node
 *
	m¥ev
;

21 
dl_node
 *
	m√xt
;

22 }
	tdl_node_t
, 
	tp_dl_node_t
;

25 
	sdqueue


27 
size_t
 
	msize
;

28 
dl_node
 *
	mhód
;

29 
dl_node
 *
	mèû
;

30 }
	tdqueue_t
, *
	tp_dqueue_t
;

33 
p_dqueue_t
 
dqueue_¸óã
();

35 
boﬁ
 
dqueue_de°roy
(
p_dqueue_t
 
dqueue
);

37 
boﬁ
 
dqueue_em±y
(
p_dqueue_t
 
dqueue
);

	@dqueue/dqueue.c

11 
	~<°dio.h
>

12 
	~<°dlib.h
>

13 
	~<î∫o.h
>

14 
	~"dqueue.h
"

16 
p_dl_node_t
 
	$node_¸óã
(*
d©a
)

18 
p_dl_node_t
 
√w_node
 = 
NULL
;

19 
√w_node
 = (
p_dl_node_t
)
	`mÆloc
((
dl_node_t
));

20 i‡(
NULL
 =
√w_node
)

22 
î∫o
 = 
ENOMEM
;

23  
NULL
;

25 
√w_node
->
d©a
 = data;

26 
√w_node
->
¥ev
 = 
NULL
;

27 
√w_node
->
√xt
 = 
NULL
;

29  
√w_node
;

30 
	}
}

32 
p_dqueue_t
 
	$dqueue_¸óã
()

34 
p_dqueue_t
 
dqueue
 = 
NULL
;

36 
dqueue
 = (
p_dqueue_t
)
	`mÆloc
((
dqueue_t
));

37 i‡(
NULL
 =
dqueue
)

39 
î∫o
 = 
ENOMEM
;

40  
NULL
;

42 
dqueue
->
hód
 = 
	`node_¸óã
(
NULL
);

43 i‡(
NULL
 =
dqueue
->
hód
)

45 
	`‰ì
(
dqueue
);

46 
î∫o
 = 
ENOMEM
;

47  
NULL
;

49 
dqueue
->
size
 = 0;

50 
dqueue
->
èû
 = dqueue->
hód
;

52  
dqueue
;

53 
	}
}

55 
boﬁ
 
	$dqueue_de°roy
(
p_dqueue_t
 
dqueue
)

57 i‡(
NULL
 =
dqueue
)

59 
î∫o
 = 
EINVAL
;

60  
Ál£
;

62 
size_t
 
cou¡
 = 0;

64 
cou¡
 = 
dqueue
->
size
; count >= 1; --count)

66 
	`dqueue_dñëe
(
dqueue
);

68 
	`‰ì
(
dqueue
);

70  
åue
;

71 
	}
}

73 
boﬁ
 
	$dqueue_em±y
(
p_dqueue_t
 
dqueue
)

75 i‡(
NULL
 =
dqueue
)

77 
î∫o
 = 
EINVAL
;

78  
Ál£
;

81  (
dqueue
->
size
 == 0);

83 
	}
}

85 *
	$dqueue_gëhód
(
p_dqueue_t
 
dqueue
)

87 i‡(
NULL
 =
dqueue
 || 0 =dqueue->
size
)

89 
î∫o
 = 
EINVAL
;

90  
NULL
;

92  
dqueue
->
hód
->
d©a
;

93 
	}
}

95 
boﬁ
 
	$dqueue_put
(
p_dqueue_t
 
dqueue
, *
d©a
)

97 i‡(
NULL
 =
dqueue
 || NULL =dqueue->
hód
)

99 
î∫o
 = 
EINVAL
;

100  
Ál£
;

103 i‡(0 =
dqueue
->
size
)

105 
dqueue
->
hód
->
d©a
 = data;

106 
dqueue
->
size
++;

107  
åue
;

110 
p_dl_node_t
 
√w_node
 = 
NULL
;

111 
√w_node
 = 
	`node_¸óã
(
d©a
);

112 i‡(
NULL
 =
√w_node
)

114 
î∫o
 = 
ENOMEM
;

115  
Ál£
;

118 
√w_node
->
¥ev
 = 
dqueue
->
èû
;

119 
√w_node
->
√xt
 = 
NULL
;

120 
dqueue
->
èû
->
√xt
 = 
√w_node
;

121 
dqueue
->
èû
 = 
√w_node
;

122 
dqueue
->
size
++;

124  
åue
;

125 
	}
}

127 
boﬁ
 
	$dqueue_p›_hód
(
p_dqueue_t
 
dqueue
)

129 i‡(
NULL
 =
dqueue
 || 0 =dqueue->
size
)

131 
î∫o
 = 
EINVAL
;

132  
Ál£
;

135 
p_dl_node_t
 
hód
 = 
dqueue
->hód->
√xt
;

136 
	`‰ì
(
dqueue
->
hód
->
d©a
);

137 
	`‰ì
(
dqueue
->
hód
);

138 
dqueue
->
hód
 = head;

139 i‡(
NULL
 !
dqueue
->
hód
)

141 
dqueue
->
hód
->
¥ev
 = 
NULL
;

143 
dqueue
->
size
--;

145  
åue
;

146 
	}
}

148 
boﬁ
 
	$dqueue_dñëe
(
p_dqueue_t
 
dqueue
)

150 i‡(
NULL
 =
dqueue
 || 0 =dqueue->
size
)

152 
î∫o
 = 
EINVAL
;

153  
Ál£
;

156 
p_dl_node_t
 
hód
 = 
dqueue
->head;

157 
	`‰ì
(
hód
->
d©a
);

158 
	`‰ì
(
hód
);

159 
dqueue
->
hód
 = dqueue->hód->
√xt
;

160 i‡(
NULL
 !
dqueue
->
hód
)

162 
dqueue
->
hód
->
¥ev
 = 
NULL
;

164 
dqueue
->
size
--;

166  
åue
;

167 
	}
}

169 
dqueue_¥öt
(
p_dqueue_t
 
dqueue
, (*
Â
)(*
d©a
))

171 i‡(
NULL
 =
dqueue
 || 0 =dqueue->
size
)

173 
î∫o
 = 
EINVAL
;

176 
p_dl_node_t
 
hód
 = 
dqueue
->head;

177 
hód
)

179 (*
Â
)(
hód
->
d©a
);

180 
hód
 = hód->
√xt
;

182 
	}
}

	@dqueue/dqueue.c.c

11 
	~<°dio.h
>

12 
	~<°dlib.h
>

13 
	~<î∫o.h
>

14 
	~"dqueue.h
"

16 
p_dl_node_t
 
	$node_¸óã
(*
d©a
)

18 
p_dl_node_t
 
√w_node
 = 
NULL
;

19 
√w_node
 = (
p_dl_node_t
)
	`mÆloc
((
dl_node_t
));

20 i‡(
NULL
 =
√w_node
)

22 
î∫o
 = 
ENOMEM
;

23  
NULL
;

25 
√w_node
->
d©a
 = data;

26 
√w_node
->
¥ev
 = 
NULL
;

27 
√w_node
->
√xt
 - 
NULL
;

29  
√w_node
;

30 
	}
}

32 
p_dqueue_t
 
	$dqueue_¸óã
()

34 
p_dqueue_t
 
dqueue
 = 
NULL
;

36 
dqueue
 = (
p_dqueue_t
)
	`mÆloc
((
dqueue_t
));

37 i‡(
NULL
 =
dqueue
)

39 
î∫o
 = 
ENOMEM
;

40  
NULL
;

42 
dqueue
->
hód
 = (
p_dl_node_t
)
	`mÆloc
((
dl_node_t
));

43 i‡(
NULL
 =
dqueue
->
hód
)

45 
	`‰ì
(
dqueue
);

46 
î∫o
 = 
ENOMEM
;

47  
NULL
;

49 
dqueue
->
size
 = 0;

50 
dqueue
->
hód
->
d©a
 = 
NULL
;

51 
dqueue
->
hód
->
¥ev
 = 
NULL
;

52 
dqueue
->
hód
->
√xt
 = 
NULL
;

53 
dqueue
->
èû
 = dqueue->
hód
;

55  
dqueue
;

56 
	}
}

58 
boﬁ
 
	$dqueue_de°roy
(
p_dqueue_t
 
dqueue
)

60 i‡(
NULL
 =
queue
)

62 
î∫o
 = 
EINVAL
;

63  
Ál£
;

66 
	}
}

68 
boﬁ
 
	$dqueue_em±y
(
p_dqueue_t
 
dqueue
)

70 i‡(
NULL
 =
dqueue
)

72 
î∫o
 = 
EINVAL
;

73  
Ál£
;

76  (
dqueue
->
size
 == 0);

78 
	}
}

80 *
	$dqueue_gëhód
(
p_dqueue_t
 
dqueue
)

82 i‡(
NULL
 =
dqueue
 || 0 =dqueue->
size
)

84 
î∫o
 = 
EINVAL
;

85  
NULL
;

87  
dqueue
->
hód
->
d©a
;

88 
	}
}

90 
boﬁ
 
	$dqueue_put
(
p_dqueue_t
 
dqueue
, *
d©a
)

92 i‡(
NULL
 =
dqueue
 || NULL =dqueue->
hód
)

94 
î∫o
 = 
EINVAL
;

95  
Ál£
;

98 i‡(0 =
dqueue
->
size
)

100 
dqueue
->
hód
->
d©a
 = data;

101 
dqueue
->
size
++;

102  
åue
;

105 
p_dl_node_t
 
√w_node
 = 
NULL
;

106 
√w_node
 = 
	`node_¸óã
(
d©a
);

107 i‡(
NULL
 =
√w_node
)

109 
î∫o
 = 
ENOMEM
;

110  
Ál£
;

113 
√w_node
->
¥ev
 = 
dqueue
->
èû
;

114 
√w_node
->
√xt
 = 
NULL
;

115 
dqueue
->
èû
 = 
√w_node
;

116 
dqueue
->
size
++;

118  
åue
;

119 
	}
}

121 
boﬁ
 
	$dqueue_dñëe
(
p_dqueue_t
 
dqueue
)

123 i‡(
NULL
 =
dqueue
 || 0 =dqueue->
size
)

125 
î∫o
 = 
EINVAL
;

126  
Ál£
;

129 
p_dl_node_t
 
hód
 = 
dqueue
->head;

130 
dqueue
->
hód
 = dqueue->hód->
√xt
;

131 
	`‰ì
(
hód
->
d©a
);

132 
	`‰ì
(
hód
);

133 
dqueue
->
size
--;

135  
åue
;

136 
	}
}

138 
dqueue_¥öt
(
p_dqueue_t
 
dqueue
, (*
Â
)(*
d©a
))

140 i‡(
NULL
 =
dqueue
 || 0 =dqueue->
size
)

142 
î∫o
 = 
EINVAL
;

145 
p_dl_node_t
 
hód
 = 
dqueue
->head;

146 
hód
)

148 (*
Â
)(
hód
->
d©a
);

149 
hód
 = hód->
√xt
;

151 
	}
}

	@dqueue/dqueue.h

11 #i‚de‡
__DQUEUE_H__


12 
	#__DQUEUE_H__


	)

14 
	~<°dboﬁ.h
>

15 
	~<°ddef.h
>

17 
	sdl_node


19 *
	md©a
;

20 
dl_node
 *
	m¥ev
;

21 
dl_node
 *
	m√xt
;

22 }
	tdl_node_t
, *
	tp_dl_node_t
;

25 
	sdqueue


27 
size_t
 
	msize
;

28 
dl_node
 *
	mhód
;

29 
dl_node
 *
	mèû
;

30 }
	tdqueue_t
, *
	tp_dqueue_t
;

33 
p_dqueue_t
 
dqueue_¸óã
();

35 
boﬁ
 
dqueue_de°roy
(
p_dqueue_t
 
dqueue
);

37 
boﬁ
 
dqueue_em±y
(
p_dqueue_t
 
dqueue
);

39 *
dqueue_gëhód
(
p_dqueue_t
 
dqueue
);

41 
boﬁ
 
dqueue_put
(
p_dqueue_t
 
dqueue
, *
d©a
);

43 
boﬁ
 
dqueue_p›_hód
(
p_dqueue_t
 
dqueue
);

45 
boﬁ
 
dqueue_p›_èû
(
p_dqueue_t
 
dqueue
);

47 
boﬁ
 
dqueue_dñëe
(
p_dqueue_t
 
dqueue
);

49 
dqueue_¥öt
(
p_dqueue_t
 
dqueue
, (*
Â
)(*
d©a
));

	@dqueue/test.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<î∫o.h
>

4 
	~"dqueue.h
"

6 
îr_exô
(*
°r_îr
);

7 
¥öt
(*
d©a
);

10 
	sexam∂e


12 
	ma
;

13 
	mb
;

14 }
	texam
;

15 
exam
 *
make
(
n
);

17 
	$maö
(
¨gc
, *
¨gv
[])

19 
p_dqueue_t
 
dqueue
 = 
NULL
;

20 
dqueue
 = 
	`dqueue_¸óã
();

21 i‡(
NULL
 =
dqueue
)

23 
	`îr_exô
("createÉrror");

25 i‡(
	`dqueue_em±y
(
dqueue
))

27 
	`¥ötf
("==========>empty<============\n");

31 
	`¥ötf
("==========>full<=============\n");

33 
i
;

35 
i
 = 0; i < 10; i++)

37 i‡(!
	`dqueue_put
(
dqueue
, 
	`make
(
i
)))

39 
	`îr_exô
("putÉrror");

42 i‡(
	`dqueue_em±y
(
dqueue
))

44 
	`¥ötf
("==========>empty<============\n");

48 
	`¥ötf
("==========>full<=============\n");

50 
	`dqueue_¥öt
(
dqueue
, 
¥öt
);

52 
	`putch¨
('\n');

53 
	`¥ötf
("Thêfú°ÉÀmíài†%d\n", *(*)
	`dqueue_gëhód
(
dqueue
));

54 
	`putch¨
('\n');

58 
	`putch¨
('\n');

61 i‡(
	`dqueue_p›_hód
(
dqueue
))

63 
	`dqueue_¥öt
(
dqueue
, 
¥öt
);

65 
	`putch¨
('\n');

66 
	`¥ötf
("Thêfú°ÉÀmíài†%d\n", *(*)
	`dqueue_gëhód
(
dqueue
));

67 
	`putch¨
('\n');

71 i‡(
	`dqueue_p›_hód
(
dqueue
))

73 
	`dqueue_¥öt
(
dqueue
, 
¥öt
);

75 
	`putch¨
('\n');

76 
	`¥ötf
("Thêfú°ÉÀmíài†%d\n", *(*)
	`dqueue_gëhód
(
dqueue
));

77 
	`putch¨
('\n');

83 i‡(
	`dqueue_p›_hód
(
dqueue
))

85 
	`dqueue_¥öt
(
dqueue
, 
¥öt
);

87 
	`putch¨
('\n');

88 
	`¥ötf
("Thêfú°ÉÀmíài†%d\n", *(*)
	`dqueue_gëhód
(
dqueue
));

89 
	`putch¨
('\n');

95 i‡(
	`dqueue_p›_hód
(
dqueue
))

97 
	`dqueue_¥öt
(
dqueue
, 
¥öt
);

99 
	`putch¨
('\n');

100 
	`¥ötf
("Thêfú°ÉÀmíài†%d\n", *(*)
	`dqueue_gëhód
(
dqueue
));

101 
	`putch¨
('\n');

106 i‡(
	`dqueue_p›_hód
(
dqueue
))

108 
	`dqueue_¥öt
(
dqueue
, 
¥öt
);

110 
	`putch¨
('\n');

111 
	`¥ötf
("Thêfú°ÉÀmíài†%d\n", *(*)
	`dqueue_gëhód
(
dqueue
));

112 
	`putch¨
('\n');

116 i‡(
	`dqueue_p›_hód
(
dqueue
))

118 
	`dqueue_¥öt
(
dqueue
, 
¥öt
);

120 
	`putch¨
('\n');

121 
	`¥ötf
("Thêfú°ÉÀmíài†%d\n", *(*)
	`dqueue_gëhód
(
dqueue
));

122 
	`putch¨
('\n');

127 i‡(
	`dqueue_p›_hód
(
dqueue
))

129 
	`dqueue_¥öt
(
dqueue
, 
¥öt
);

131 
	`putch¨
('\n');

132 
	`¥ötf
("Thêfú°ÉÀmíài†%d\n", *(*)
	`dqueue_gëhód
(
dqueue
));

133 
	`putch¨
('\n');

136 i‡(
	`dqueue_p›_hód
(
dqueue
))

138 
	`dqueue_¥öt
(
dqueue
, 
¥öt
);

140 
	`putch¨
('\n');

141 
	`¥ötf
("Thêfú°ÉÀmíài†%d\n", *(*)
	`dqueue_gëhód
(
dqueue
));

142 
	`putch¨
('\n');

146 i‡(
	`dqueue_p›_hód
(
dqueue
))

148 
	`dqueue_¥öt
(
dqueue
, 
¥öt
);

150 
	`putch¨
('\n');

151 
	`¥ötf
("Thêfú°ÉÀmíài†%d\n", *(*)
	`dqueue_gëhód
(
dqueue
));

152 
	`putch¨
('\n');

158 i‡(
	`dqueue_p›_hód
(
dqueue
))

160 
	`¥ötf
("%d\n", 
dqueue
->
size
);

161 
	`dqueue_¥öt
(
dqueue
, 
¥öt
);

163 
	`putch¨
('\n');

164 
	`¥ötf
("Thêfú°ÉÀmíài†%d\n", *(*)
	`dqueue_gëhód
(
dqueue
));

165 
	`putch¨
('\n');

168 
	`putch¨
('\n');

170 
	`putch¨
('\n');

172 
	`putch¨
('\n');

174 
	}
}

177 
	$îr_exô
(*
°r_îr
)

179 
	`≥º‹
(
°r_îr
);

180 
	`exô
(
EXIT_FAILURE
);

181 
	}
}

183 
	$¥öt
(*
d©a
)

185 
	`¥ötf
("%4d\n", ((
exam
 *)
d©a
)->
a
);

186 
	`¥ötf
("%4d\n", ((
exam
 *)
d©a
)->
b
);

187 
	}
}

189 
exam
 *
	$make
(
n
)

191 
exam
 *
ªt
 = (exam *)
	`mÆloc
((exam));

192 i‡(
NULL
 =
ªt
)

194 
	`îr_exô
("mallocÉrror");

197 
ªt
->
a
 = 
n
;

198 
ªt
->
b
 = 
n
;

200  
ªt
;

201 
	}
}

	@list.c

1 
	~"li°.h
"

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<î∫o.h
>

7 
li°_node_t
* 
	$li°_node_¸óã
(
li°_t
* 
li°
, * 
d©a
)

9 
li°_node_t
* 
node_ªt
 = 
NULL
;

11 i‡((
node_ªt
 =(
li°_node_t
 *)
	`LIST_MALLOC
(÷i°_node_t))Ë=
NULL
)

13 
î∫o
 = 
ENOMEM
;

14  
NULL
;

17 
node_ªt
->
¥ev
 = 
NULL
;

18 
node_ªt
->
√xt
 = 
NULL
;

19 
node_ªt
->
d©a
 = 
li°
->
	`¸óãd©a
(data);

20 i‡(
NULL
 =
node_ªt
->
d©a
)

22 
	`LIST_FREE
(
node_ªt
);

23  
NULL
;

26  
node_ªt
;

27 
	}
}

30 
li°_t
* 
li°_¸óã
(

31 * (*
¸óãd©a
)(* 
d©a
),

32 (*
dñëed©a
)(* 
d©a
),

33 (*
m©ch
)(* 
d©a1
, * 
d©a2
),

34 * (*
dupd©a
)(* 
d©a
),

35 (*
¥öt
)(* 
d©a
))

37 
li°_t
* 
li°_ªt
 = 
NULL
;

39 i‡((
li°_ªt
 = (
li°_t
 *)
	`LIST_MALLOC
(÷i°_t))Ë=
NULL
)

41 
î∫o
 = 
ENOMEM
;

42  
NULL
;

45 
li°_ªt
->
Àn
 = 0;

46 
li°_ªt
->
hód
 = 
NULL
;

47 
li°_ªt
->
èû
 = 
NULL
;

48 
li°_ªt
->
L¸óãd©a
 = 
¸óãd©a
;

49 
li°_ªt
->
Ldñëed©a
 = 
dñëed©a
;

50 
li°_ªt
->
Lm©ch
 = 
m©ch
;

51 
li°_ªt
->
Ldupd©a
 = 
dupd©a
;

52 
li°_ªt
->
L¥öt
 = 
¥öt
;

54  
li°_ªt
;

55 
	}
}

57 
	$li°_de°roy
(
li°_t
* 
li°
)

59 i‡(
NULL
 =
li°
)

61 
î∫o
 = 
EINVAL
;

65 
size_t
 
Àn
 = 
li°
->len;;

66 
li°_node_t
* 
√xt
 = 
NULL
;

67 
li°_node_t
* 
cuºít
 = 
li°
->
hód
;

69 
Àn
--)

71 
√xt
 = 
cuºít
->next;

72 i‡(
li°
->
de°roy
)

74 
li°
->
	`de°roy
(
cuºít
->
d©a
);

76 
	`LIST_FREE
(
cuºít
);

77 
cuºít
 = 
√xt
;

79 
	`LIST_FREE
(
li°
);

80 
	}
}

82 
boﬁ
 
	$li°_¥ïíd
(
li°_t
* 
li°
, * 
d©a
)

84 i‡(
NULL
 =
li°
 || NULL =
d©a
)

86 
î∫o
 = 
EINVAL
;

87  
Ál£
;

90 
li°_node_t
* 
√w_node
 = 
NULL
;

91 i‡((
√w_node
 = 
	`li°_node_¸óã
(
li°
, 
d©a
)Ë=
NULL
)

93 
î∫o
 = 
ENOMEM
;

94  
Ál£
;

97 i‡(
li°
->
Àn
)

99 
√w_node
->
√xt
 = 
li°
->
hód
;

100 
node
->
¥ev
 = 
NULL
;

101 
li°
->
hód
->
¥ev
 = 
√w_node
;

102 
li°
->
hód
 = 
√w_node
;

106 
li°
->
hód
 =Üi°->
èû
 = 
√w_node
;

107 
√w_node
->
¥ev
 =Çew_node->
√xt
 = 
NULL
;

110 ++
li°
->
Àn
;

112  
åue
;

113 
	}
}

115 
boﬁ
 
	$li°_≠≥nd
(
li°_t
* 
li°
, * 
d©a
)

117 i‡(
NULL
 =
li°
 || NULL =
node
)

119 
î∫o
 = 
EINVAL
;

120  
Ál£
;

123 
li°_node_t
* 
√w_node
 = 
NULL
;

124 i‡((
√w_node
 = 
	`li°_node_¸óã
(
li°
, 
d©a
)Ë=
NULL
)

126 
î∫o
 = 
ENOMEM
;

127  
Ál£
;

130 i‡(
li°
->
Àn
)

132 
√w_node
->
√xt
 = 
NULL
;

133 
√w_node
->
¥ev
 = 
li°
->
èû
;

134 
li°
->
èû
->
√xt
 = 
√w_node
;

135 
li°
->
èû
 = 
√w_node
;

139 
li°
->
hód
 =Üi°->
èû
 = 
node
;

140 
node
->
¥ev
 =Çode->
√xt
 = 
NULL
;

143 ++
li°
->
Àn
;

145  
åue
;

146 
	}
}

149 
boﬁ
 
	$li°_ö£π_node_©_‰⁄t
(
li°_t
* 
li°
, 
li°_node_t
* 
ﬁd_node
, c⁄° * 
d©a
)

151 
li°_node_t
* 
√w_node
 = 
NULL
;

152 i‡((
√w_node
 = 
	`li°_node_¸óã
(
li°
, 
d©a
)Ë=
NULL
)

154 
î∫o
 = 
ENOMEM
;

155  
Ál£
;

158 
√w_node
->
√xt
 = 
ﬁd_node
;

159 
√w_node
->
¥ev
 = 
ﬁd_node
->prev;

160 i‡(
li°
->
hód
 =
ﬁd_node
)

162 
li°
->
hód
 = 
√w_node
;

164 i‡(
√w_node
->
¥ev
 !
NULL
)

166 
√w_node
->
¥ev
->
√xt
 =Çew_node;

168 ++
li°
->
Àn
;

170  
åue
;

171 
	}
}

173 
boﬁ
 
	$li°_ö£π_d©a_©_‰⁄t
(
li°_t
* 
li°
, 
size_t
 
ödex
, c⁄° * 
d©a
)

175 i‡(
NULL
 =
li°
 || NULL =
d©a
 || 0 =
ödex


176 || 
ödex
 > 
li°
->
Àn
 || index < ~list->len)

178 
î∫o
 = 
EINVAL
;

179 
πu∫
 
Ál£
;

182 
li°


183 i‡(
ödex
 < 0)

185 
li°_node_t
* 
cuºít
 = 
li°
->
èû
;

186 
ödex
 < -1)

188 
cuºít
 = cuºít->
¥ev
;

189 ++
ödex
;

191 
	`li°_ö£π_node_©_‰⁄t
(
li°
, 
cuºít
, 
d©a
);

195 
li°_node_t
* 
cuºít
 = 
li°
->
hód
;

196 
ödex
 > 1)

198 
cuºít
 = cuºít->
√xt
;

199 --
ödex
;

201 
	`li°_ö£π_node_©_‰⁄t
(
li°
, 
cuºít
, 
d©a
);

204  
åue
;

205 
	}
}

208 
boﬁ
 
	$li°_ö£π_node_©_a·î
(
li°_t
* 
li°
, 
li°_node_t
* 
ﬁd_node
, c⁄° * 
d©a
)

210 
li°_nodt_t
* 
√w_node
 = 
NULL
;

211 i‡((
√w_node
 = 
	`li°_node_¸óã
(
li°
, 
d©a
)Ë=
NULL
)

213 
î∫o
 = 
ENOMEM
;

214 
πu∫
 
Ál£
;

217 
√w_node
->
√xt
 = 
ﬁd_node
->next;

218 
√w_node
->
¥ev
 = 
ﬁd_node
;

219 i‡(
ﬁd_node
 =
li°
->
èû
)

221 
li°
->
èû
 = 
√w_node
;

223 i‡(
√w_node
->
√xt
 !
NULL
)

225 
√w_node
->
√xt
->
¥ev
 =Çew_node;

228 ++
li°
->
Àn
;

229  
åue
;

230 
	}
}

232 
boﬁ
 
	$li°_ö£π_d©a_©_a·î
(
li°_t
* 
li°
, 
size_t
 
ödex
, c⁄° * 
d©a
)

234 i‡(
NULL
 =
li°
 || NULL =
d©a
 || 0 =
ödex


235 || 
ödex
 > 
li°
->
Àn
 || index < ~(list->len))

237 
î∫o
 = 
EINVAL
;

238  
Ál£
;

241 i‡(
ödex
 < 1)

243 
li°_node_t
* 
cuºít
 = 
li°
->
èû
;

244 
ödex
++ < -1)

246 
cuºít
 = cuºít->
¥ev
;

248 
	`li°_ö£π_node_©_a·î
(
li°
, 
cuºít
, 
d©a
);

252 
li°_node_t
* 
cuºít
 = 
li°
->
hód
;

253 
ödex
-- > 1)

255 
cuºít
 = cuºít->
√xt
;

257 
	`li°_ö£π_node_©_a·î
(
li°
, 
cuºít
, 
d©a
);

260  
åue
;

261 
	}
}

363  
åue
;

366 
boﬁ
 
	$li°_dñëe_node
(
li°_t
* 
li°
, 
li°_node_t
* 
node
)

368 i‡(
NULL
 =
li°
 || NULL =
node
)

370 
î∫o
 = 
EINVAL
;

371  
Ál£
;

374 i‡(
NULL
 !
node
->
¥ev
)

375 
node
->
¥ev
->
√xt
 =Çode->next;

377 
li°
->
hód
 = 
node
->
√xt
;

379 i‡(
NULL
 !
node
->
√xt
)

380 
node
->
√xt
->
¥ev
 =Çode->prev;

382 
li°
->
èû
 = 
node
->
¥ev
;

383 i‡(
li°
->
de°roy
)

384 
li°
->
	`de°roy
(
node
->
d©a
);

386 
	`LIST_FREE
(
node
);

387 --
li°
->
Àn
;

389  
åue
;

390 
	}
}

453 
boﬁ
 
	$li°_dñëe_d©a_by_ödex
(
li°_t
* 
li°
, 
size_t
 
ödex
)

455 i‡(
NULL
 =
li°
 || 0 =
ödex


456 || 
ödex
 > 
li°
->
Àn
 || index < ~list->len)

458 
î∫o
 = 
EINVAL
;

459  
Ál£
;

462 i‡(
ödex
 < 0)

464 
lsô_node_t
* 
cuºít
 = 
li°
->
èû
;

466 
ödex
++ < -1)

468 
cuºít
 = cuºít->
¥ev
;

470 
	`li°_dñëe_node
(
li°
, 
cuºít
);

474 
li°_node_t
* 
cuºít
 = 
li°
->
hód
;

476 
ödex
-- > 1)

478 
cuºít
 = cuºít->
√xt
;

480 
	`li°_dñëe_node
(
li°
, 
cuºít
);

483  
åue
;

484 
	}
}

486 
	$li°_dñëe_node_by_d©a
(
li°_t
* 
li°
, * 
d©a
)

488 i‡(
NULL
 =
li°
 || NULL =
d©a
)

490 
î∫o
 = 
EINVAL
;

494 
ödex
 = 0;

495 
li°_ôî©‹_t
* 
ôî©‹
 = 
NULL
;

497 
ôî©‹
 = 
	`li°_ôî©‹_¸óã
(
li°
, 
LIST_HEAD
);

499 
	`li°_ôî©‹_node
(
ôî©‹
Ë!
NULL
)

501 i‡(
li°
->
m©ch
)

503 
ödex
++;

504 i‡(0 =
li°
->
	`m©ch
(
	`li°_ôî©‹_d©a
(
ôî©‹
), 
d©a
))

506 
	`li°_dñëe_node
(
li°
, 
	`li°_ôî©‹_node
(
ôîa‹
));

507 
	`li°_ôî©‹_de°roy
(
ôî©‹
);

508  
ödex
;

513 
ödex
++;

514 i‡(
	`li°_ôî©‹_d©a
(
ôî©‹
Ë=
d©a
)

516 
	`li°_dñëe_node
(
li°
, 
	`li°_ôî©‹_node
(
ôî©‹
));

517 
	`li°_ôî©‹_de°roy
(
ôî©‹
);

518  
ödex
;

521 
ôî©‹
 = 
	`li°_ôî©‹_√xt_ôî©‹
(iterator);

523 
	`li°_ôî©‹_de°roy
(
ôøt‹
);

524  
ödex
;

525 
	}
}

527 
li°_ôî©‹_t
* 
	$li°_ôî©î_¸óã
(
li°_t
* 
li°
, 
li°_dúe˘i⁄_t
 
dúe˘i⁄
)

529 
li°_node_t
* 
node
 = 
dúe˘i⁄
 =
LIST_HEAD


530 ? 
li°
->
hód


531 : 
li°
->
èû
;

533  
	`li°_ôî¨‹_¸óã_‰om_node
(
node
, 
dúe˘i⁄
);

534 
	}
}

536 
li°_ôî©‹_t
* 
	$li°_ôî©‹_¸óã_‰ome_node
(
li°_node_t
* 
node
, 
li°_ôî©‹_t
 
dúe˘i⁄
)

538 
li°_ôî©‹_t
* 
ôî©‹
 = 
NULL
;

539 i‡((
ôî©‹
 = (
li°_ôî©‹_t
 *)
	`LIST_MALLOC
(÷i°_ôî©‹_t))Ë=
NULL
)

541 
î∫o
 = 
ENOMEM
;

542  
NULL
;

544 
ôî©‹
->
dúe˘i⁄
 = direction;

545 
ôî©‹
->
√xt
 = 
node
;

547  
ôî©‹
;

548 
	}
}

550 
li°_node_t
* 
	$li°_ôî©‹_√xt
(
li°_ôî©‹_t
* 
ôî©‹
)

552 
li°_node_t
* 
node
 = 
NULL
;

554 
node
 = 
ôî©‹
->
dúe˘i⁄
 =
LIST_HEAD


555 ? 
ôî©‹
->
√xt
->next

556 : 
ôî©‹
->
√xt
->
¥ev
;

558  
node
;

559 
	}
}

568 
li°_ôî©‹_t
* 
	$li°_ôî©‹_√xt_ôî©‹
(
li°_ôî©‹_t
* 
ôî©‹
)

570 
ôî©‹
->
√xt
 = iãøt‹->
dúe˘i⁄
 =
LIST_HEAD


571 ? 
ôî©‹
->
√xt
->next

572 : 
ôî©‹
->
√xt
->
¥ev
;

574  
ôî©‹
;

575 
	}
}

576 
	$li°_ôî©‹_de°roy
(
li°_ôî©‹_t
* 
ôî©‹
)

578 
	`LIST_FREE
(
ôî©‹
);

579 
	}
}

601 
boﬁ
 
	$li°_upd©e_d©a
(
li°_t
* 
li°
, 
size_t
 
ödex
, * 
d©a
)

603 i‡(
NULL
 =
li°
 || NULL =
d©a
)

605 
î∫o
 = 
EINVAL
;

606  
NULL
;

609 
li°_node_t
* 
cuºít
 = 
NULL
;

610 i‡(
ödex
 < 0)

612 
cuºít
 = 
li°
->
èû
;

613 
ödex
++ < -1)

615 
cuºít
 = cuºít->
¥ev
;

620 
cuºít
 = 
li°
->
hód
;

621 
ödex
-- > 1)

623 
cuºít
 = cuºít->
√xt
;

627 i‡(
li°
->
dñëed©a
)

629 
li°
->
	`dñëed©a
(
d©a
);

631 
cuºít
->
d©a
 = data;

633  
åue
;

634 
	}
}

637 
	$li°_föd_by_d©a
(
li°_t
* 
li°
, * 
d©a
)

639 i‡(
NULL
 =
li°
 || NULL =
d©a
)

641 
î∫o
 = 
EINVAL
;

645 
ödex
 = 0;

646 
li°_ôî©‹_t
* 
ôî©‹
 = 
NULL
;

647 
ôî©‹
 = 
	`li°_ôî©‹_¸óã
(
li°
, 
LIST_HEAD
);

648 
	`li°_ôî©‹_node
(
ôî©‹
Ë!
NULL
)

650 ++
ödex
;

651 i‡(
li°
->
m©ch
)

653 i‡(0 =
li°
->
	`m©ch
(
	`li°_ôî©‹_d©a
(
ôî©‹
), 
d©a
))

654  
ödex
;

658 i‡(
	`li°_ôî©‹_d©a
(
ôî©‹
Ë=
d©a
)

660  
ödex
;

663 
ôî©‹
 = 
	`li°_ôî©‹_√xt_ôî©‹
(iterator);

666 
	}
}

668 * 
	$li°_föd_by_ödex
(
li°_t
* 
li°
, 
size_t
 
ödex
)

670 i‡(
NULL
 =
li°
)

672 
î∫o
 = 
EINVAL
;

673  
NULL
;

676 
li°_node_t
* 
cuºít
 = 
NULL
;

677 i‡(
ödex
 < 0)

679 
cuºít
 = 
li°
->
èû
;

680 
ödex
++ < -1)

682 
cuºít
 = cuºít->
¥ev
;

687 
cuºít
 = 
li°
->
hód
;

688 
ödex
-- > 1)

690 
cuºít
 = cuºít->
√xt
;

694  
cuºít
->
d©a
;

695 
	}
}

697 
li°_t
* 
	$li°_du∂iˇã
(
li°_t
* 
li°
)

699 i‡(
NULL
 =
li°
)

701 
î∫o
 = 
EINVAL
;

702  
NULL
;

704 
li°_t
* 
c›y_li°
 = 
NULL
;

705 
li°_ôî©‹_t
* 
ôî©‹
 = 
NULL
;

716 i‡((
c›y_li°
 = 
	`li°_¸óã
(

717 
li°
->
L¸óãd©a
,

718 
li°
->
Ldñëed©e
,

719 
li°
->
Lm©ch
,

720 
li°
->
Ldupd©a
,

721 
li°
->
L¥öt
)Ë=
NULL
)

723 
î∫o
 = 
ENOMEM
;

724  
NULL
;

726 
ôî©‹
 = 
	`li°_ôî©‹_¸óã
(
li°
, 
LIST_HEAD
);

727 
	`li°_ôî©‹_node
(
ôî©‹
Ë!
NULL
)

729 * 
d©a
;

731 i‡(
li°
->
du∂iˇã
)

733 
d©a
 = 
li°
->
	`du∂iˇã
(
	`li°_ôî©‹_d©a
(
ôî©‹
));

734 i‡(
NULL
 =
d©a
)

736 
	`li°_de°roy
(
c›y_li°
);

737 
	`li°_ôî©‹_de°roy
(
ôî©‹
);

738  
NULL
;

743 
d©a
 = 
	`li°_ôî©‹_d©a
(
ôî©‹
);

746 i‡(
NULL
 =
	`li°_≠≥nd
(
	`li°_ôî©‹_d©a
(
ôî©‹
), 
d©a
))

749 
	`li°_de°roy
(
c›y_li°
);

750 
	`li°_ôî©‹_de°roy
(
ôî©‹
);

751  
NULL
;

753 
ôî©‹
 = 
	`li°_ôî©‹_√xt_ôî©‹
(iterator);

756 
	`li°_ôî©‹_de°roy
(
ôî©‹
);

758  
c›y_li°
;

759 
	}
}

761 
li°_t
* 
	$li°_ªvîßl
(
li°_t
* 
li°
)

763 i‡(
NULL
 =
li°
)

765 
î∫o
 = 
EINVAL
;

766  
NULL
;

769 
li°_node_t
* 
t›
 = 
li°
->
hód
;

770 
li°_node_t
* 
íd
 = 
li°
->
èû
;

772 
t›
 !
íd
)

774 
li°_node_t
* 
√xt
 = 
t›
->next;

775 
li°_node_t
* 
¥ev
 = 
íd
->prev;

777 
t›
->
√xt
 = 
NULL
;

778 
t›
->
¥ev
 =Örev;

779 
íd
->
√xt
 =Çext;

780 
íd
->
¥ev
 = 
NULL
;

781 
√xt
->
¥ev
 = 
íd
;

782 
¥ev
->
√xt
 = 
t›
;

784 
t›
 = 
√xt
;

785 
íd
 = 
¥ev
;

788  
li°
;

789 
	}
}

791 
	$li°_¥öt
(
li°_t
* 
li°
)

793 i‡(
NULL
 =
li°
)

795 
î∫o
 = 
EINVAL
;

799 
ôî©‹
 = 
	`li°_ôî©‹_¸óã
(
li°
, 
LIST_HEAD
);

801 
	`li°_ôî©‹_node
(
ôî©‹
Ë!
NULL
)

803 i‡(
li°
->
L¥öt
)

805 
li°
->
	`L¥öt
(
	`li°_ôî©‹_d©a
(
ôî©‹
));

808 
ôî©‹
 = 
	`li°_ôî©‹_√xt_ôî©‹
(iterator);

810 
	}
}

	@list.h

1 #i‚de‡
__LIST_H__


2 #i‚de‡
__LIST_H__


4 #ifde‡
__˝lu•lus


8 #i‚de‡
LIST_MALLOC


9 
	#LIST_MALLOC
 
mÆloc


	)

12 #i‚de‡
LIST_FREE


13 
	#LIST_FREE
 
‰ì


	)

16 
	~<°ddef.h
>

19 
	sli°_node


21 * 
d©a
;

22 
li°_node
* 
¥ev
;

23 
li°_node
* 
√xt
;

24 }
	tli°_node_t
;

27 
	sli°


29 
size_t
 
Àn
;

30 
li°_node_t
* 
hód
;

31 
li°_node_t
* 
èû
;

32 * (*
L¸óãd©a
)(* 
d©a
);

33 (*
Ldñëed©a
)(* 
d©a
);

34 (*
Lm©ch
)(c⁄° * 
d©a1
,c⁄° * 
d©a2
);

37 * (*
Ldupd©a
)(* 
d©a
);

38 (*
L¥öt
)(* 
d©a
);

39 }
	tli°_t
;

44 
LIST_HEAD
,

45 
LIST_TAIL


46 }
	tli°_dúe˘i⁄_t
;

49 
li°_ôî©‹


51 
li°_node_t
* 
√xt
;

52 
li°_dúe˘i⁄_t
 
dúe˘i⁄
;

53 }
	tli°_ôî©‹_t
;

56 
li°_node_t
* 
li°_node_¸óã
(
li°_t
* 
li°
, * 
d©a
);

59 
li°_t
* 
li°_¸óã
(

60 * (*
¸óãd©a
)(* 
d©a
),

61 (*
dñëed©a
)(* 
d©a
),

62 (*
m©ch
)(* 
d©a1
, * 
d©a2
)

63 * (*
dupd©a
)(* 
d©a
),

64 (*
¥öt
)(* 
d©a
));

66 
li°_de°roy
(
li°_t
* 
li°
);

68 
boﬁ
 
li°_¥ïíd
(
li°_t
* 
li°
, * 
d©a
);

69 
boﬁ
 
li°_≠≥nd
(
li°_t
* 
li°
, * 
d©a
);

73 
boﬁ
 
li°_ö£π_d©a_©_‰⁄t
(
li°_t
* 
li°
, 
size_t
 
ödex
, c⁄° * 
d©a
);

74 
boﬁ
 
li°_ö£â_d©a_©_œãr
(
li°_t
* 
li°
, 
size_t
 
ödex
, c⁄° * 
d©a
);

77 
boﬁ
 
li°_dñëe_d©a_by_ödex
(
li°_t
* 
li°
, 
size_t
 
ödex
);

78 
li°_dñëe_node_by_d©a
(
li°_t
* 
li°
, * 
d©a
);

83 
boﬁ
 
li°_upd©e_d©a
(
li°_t
* 
li°
, 
size_t
 
ödex
, * 
d©a
);

85 
li°_föd_by_d©a
(
li°_t
* 
li°
, c⁄° * 
d©a
);

86 * 
li°_föd_by_ödex
(
li°_t
* 
li°
, 
size_t
 
ödex
);

88 
li°_t
* 
li°_du∂iˇã
÷i°_t* 
li°
);

90 
li°_t
* 
li°_ªvîßl
÷i°_t* 
li°
);

92 
li°_¥öt
(
li°_t
* 
li°
);

95 
li°_ôî©‹_t
* 
li°_ôî©‹_¸óã
(
li°_t
* 
li°
, 
li°_dúe˘i⁄_t
 
dúó˘i⁄
);

97 
li°_ôî©‹_t
* 
li°_ôî©‹_¸óã_fome_node
(
li°_node_t
* 
node
,Üi°_ôî©‹_à
dúe˘i⁄
);

99 
li°_ôî©‹_t
* 
li°_ôî©‹_√xt_ôî©‹
÷i°_ôî©‹_t* 
ôî©‹
);

101 
li°_ôî©‹_de°roy
(
li°_ôî©‹_t
* 
ôî©‹
);

103 
	#Lhód
(
li°
Ë(÷i°)->
hód
)

	)

104 
	#Lèû
(
li°
Ë(÷i°)->
èû
)

	)

105 
	#Node_Cou¡
(
li°
Ë(÷i°)->
Àn
)

	)

106 
	#Cª©e_D©a
(
li°
Ë(÷i°)->
L¸óãd©a
)

	)

107 
	#Cñëe_D©a
(
li°
Ë(÷i°)->
Ldñëed©a
)

	)

108 
	#M©ch
(
li°
Ë(÷i°)->
Lm©ch
)

	)

109 
	#Pröt
(
li°
Ë(÷i°)->
L¥öt
)

	)

111 
	#li°_ôî©‹_node
(
ôî©‹
Ë((ôî©‹)->
√xt
)

	)

112 
	#li°_ôî©‹_d©a
(
ôî©‹
Ë((ôî©‹)->
√xt
->
d©a
)

	)

114 #ifde‡
__˝lu•lus


	@list/clist.c

	@list/clist.h

	@list/list.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<î∫o.h
>

4 
	~"li°.h
"

6 
p_li°_t
 
	$li°_¸óã
()

8 
p_li°_t
 
li°
 = 
NULL
;

10 
li°
 = (
p_li°_t
)
	`mÆloc
((
li°_t
));

11 i‡(
NULL
 =
li°
)

13 
î∫o
 = 
ENOMEM
;

14  
NULL
;

17 
li°
->
size
 = 0;

18 
li°
->
hód
 = (
p_l_node_t
)
	`mÆloc
((
l_node_t
));

19 i‡(
NULL
 =
li°
->
hód
)

21 
	`‰ì
(
li°
);

22 
î∫o
 = 
ENOMEM
;

23  
NULL
;

26 
li°
->
hód
->
d©a
 = 
NULL
;

27 
li°
->
hód
->
√xt
 = 
NULL
;

28 
li°
->
èû
 =Üi°->
hód
;

30  
li°
;

31 
	}
}

33 
	$li°_de°roy
(
p_li°_t
 
li°
)

35 
ödex
 = 0;

36 
p_l_node_t
 
cuºít
 = 
NULL
, 
±r
 = NULL;

38 i‡(
NULL
 =
li°
)

40 
î∫o
 = 
EINVAL
;

44 
±r
 = 
cuºít
 = 
li°
->
hód
;

45 
ödex
 = 0; index < 
li°
->
size
; index++)

47 
cuºít
 = cuºít->
√xt
;

48 
	`‰ì
(
±r
->
d©a
);

49 
	`‰ì
(
±r
);

50 
±r
 = 
cuºít
;

53 
	`‰ì
(
li°
);

54 
	}
}

	@list/list.h

13 #i‚de‡
__LIST_H__


14 
	#__LIST_H__


	)

16 
	~<°dboﬁ.h
>

17 
	~<°ddef.h
>

20 
	sl_node
 {

21 *
	md©a
;

22 
_l_node
 *
	m√xt
;

23 }
	tl_node_t
, *
	tp_l_node_t
;

25 
	sli°
 {

26 
size_t
 
	msize
;

27 
p_l_node_t
 
	mhód
;

28 
p_l_node_t
 
	mèû
;

29 }
	tli°_t
, *
	tp_li°_t
;

32 
p_li°_t
 
li°_¸óã
();

34 
li°_de°roy
(
p_li°_t
 
li°
);

36 
boﬁ
 
li°_ö£π
(
p_li°_t
 );

	@list/llist.c

	@list/llist.h

	@list_1.c

1 
	~"li°.h
"

2 
	~<°dio.h
>

3 
	~<°dlib.h
>

4 
	~<î∫o.h
>

7 
li°_node_t
* 
	$li°_node_¸óã
(
li°_t
* 
li°
, * 
d©a
)

9 
li°_node_t
* 
node_ªt
 = 
NULL
;

11 i‡((
node_ªt
 =(
li°_node_t
 *)
	`LIST_MALLOC
(÷i°_node_t))Ë=
NULL
)

13 
î∫o
 = 
ENOMEM
;

14  
NULL
;

17 
node_ªt
->
¥ev
 = 
NULL
;

18 
node_ªt
->
√xt
 = 
NULL
;

19 
node_ªt
->
d©a
 = 
li°
->
	`¸óãd©a
(data);

20 i‡(
NULL
 =
node_ªt
->
d©a
)

22 
	`LIST_FREE
(
node_ªt
);

23  
NULL
;

26  
node_ªt
;

27 
	}
}

30 
li°_t
* 
li°_¸óã
(

31 * (*
¸óãd©a
)(* 
d©a
),

32 (*
dñëed©a
)(* 
d©a
),

33 (*
m©ch
)(* 
d©a1
, * 
d©a2
),

34 * (*
dupd©a
)(* 
d©a
),

35 (*
¥öt
)(* 
d©a
),

36 * 
d©a
)

38 
li°_t
* 
li°_ªt
 = 
NULL
;

40 i‡((
li°_ªt
 = (
li°_t
 *)
	`LIST_MALLOC
(÷i°_t))Ë=
NULL
)

42 
î∫o
 = 
ENOMEM
;

43  
NULL
;

46 
li°_ªt
->
Àn
 = 1;

47 
li°_ªt
->
L¸óãd©a
 = 
¸óãd©a
;

48 
li°_ªt
->
Ldñëed©a
 = 
dñëed©a
;

49 
li°_ªt
->
Lm©ch
 = 
m©ch
;

50 
li°_ªt
->
Ldupd©a
 = 
dupd©a
;

51 
li°_ªt
->
L¥öt
 = 
¥öt
;

52 
li°_ªt
->
hód
 = 
	`li°_node_¸óã
÷i°_ªt, 
d©a
);

53 i‡(
NULL
 =
li°_ªt
->
hód
)

55 
	`LIST_FREE
(
li°_ªt
);

56  
NULL
;

58 
li°_ªt
->
èû
 =Üi°_ªt->
hód
;

60  
li°_ªt
;

61 
	}
}

64 
	$li°_de°roy
(
li°_t
* 
li°
)

66 i‡(
NULL
 =
li°
)

68 
î∫o
 = 
EINVAL
;

72 
size_t
 
Àn
 = 
li°
->len;;

73 
li°_node_t
* 
√xt
 = 
NULL
;

74 
li°_node_t
* 
cuºít
 = 
li°
->
hód
;

76 
Àn
--)

78 
√xt
 = 
cuºít
->next;

79 i‡(
li°
->
de°roy
)

81 
li°
->
	`de°roy
(
cuºít
->
d©a
);

83 
	`LIST_FREE
(
cuºít
);

84 
cuºít
 = 
√xt
;

86 
	`LIST_FREE
(
li°
);

87 
	}
}

90 
boﬁ
 
	$li°_¥ïíd
(
li°_t
* 
li°
, * 
d©a
)

92 i‡(
NULL
 =
li°
 || NULL =
d©a
)

94 
î∫o
 = 
EINVAL
;

95  
Ál£
;

98 
li°_node_t
* 
√w_node
 = 
NULL
;

99 i‡((
√w_node
 = 
	`li°_node_¸óã
(
li°
, 
d©a
)Ë=
NULL
)

101 
î∫o
 = 
ENOMEM
;

102  
Ál£
;

105 i‡(
li°
->
Àn
)

107 
√w_node
->
√xt
 = 
li°
->
hód
;

108 
node
->
¥ev
 = 
NULL
;

109 
li°
->
hód
->
¥ev
 = 
√w_node
;

110 
li°
->
hód
 = 
√w_node
;

114 
li°
->
hód
 =Üi°->
èû
 = 
√w_node
;

115 
√w_node
->
¥ev
 =Çew_node->
√xt
 = 
NULL
;

118 ++
li°
->
Àn
;

120  
åue
;

121 
	}
}

124 
boﬁ
 
	$li°_≠≥nd
(
li°_t
* 
li°
, * 
d©a
)

126 i‡(
NULL
 =
li°
 || NULL =
node
)

128 
î∫o
 = 
EINVAL
;

129  
Ál£
;

132 
li°_node_t
* 
√w_node
 = 
NULL
;

133 i‡((
√w_node
 = 
	`li°_node_¸óã
(
li°
, 
d©a
)Ë=
NULL
)

135 
î∫o
 = 
ENOMEM
;

136  
Ál£
;

139 i‡(
li°
->
Àn
)

141 
√w_node
->
√xt
 = 
NULL
;

142 
√w_node
->
¥ev
 = 
li°
->
èû
;

143 
li°
->
èû
->
√xt
 = 
√w_node
;

144 
li°
->
èû
 = 
√w_node
;

148 
li°
->
hód
 =Üi°->
èû
 = 
node
;

149 
node
->
¥ev
 =Çode->
√xt
 = 
NULL
;

152 ++
li°
->
Àn
;

154  
åue
;

155 
	}
}

158 
boﬁ
 
	$li°_ö£π_node_©_‰⁄t
(
li°_t
* 
li°
, 
li°_node_t
* 
ﬁd_node
, c⁄° * 
d©a
)

160 
li°_node_t
* 
√w_node
 = 
NULL
;

161 i‡((
√w_node
 = 
	`li°_node_¸óã
(
li°
, 
d©a
)Ë=
NULL
)

163 
î∫o
 = 
ENOMEM
;

164  
Ál£
;

167 
√w_node
->
√xt
 = 
ﬁd_node
;

168 
√w_node
->
¥ev
 = 
ﬁd_node
->prev;

169 i‡(
li°
->
hód
 =
ﬁd_node
)

171 
li°
->
hód
 = 
√w_node
;

173 i‡(
√w_node
->
¥ev
 !
NULL
)

175 
√w_node
->
¥ev
->
√xt
 =Çew_node;

177 ++
li°
->
Àn
;

179  
åue
;

180 
	}
}

183 
boﬁ
 
	$li°_ö£π_node_©_a·î
(
li°_t
* 
li°
, 
li°_node_t
* 
ﬁd_node
, c⁄° * 
d©a
)

185 
li°_nodt_t
* 
√w_node
 = 
NULL
;

186 i‡((
√w_node
 = 
	`li°_node_¸óã
(
li°
, 
d©a
)Ë=
NULL
)

188 
î∫o
 = 
ENOMEM
;

189 
πu∫
 
Ál£
;

192 
√w_node
->
√xt
 = 
ﬁd_node
->next;

193 
√w_node
->
¥ev
 = 
ﬁd_node
;

194 i‡(
ﬁd_node
 =
li°
->
èû
)

196 
li°
->
èû
 = 
√w_node
;

198 i‡(
√w_node
->
√xt
 !
NULL
)

200 
√w_node
->
√xt
->
¥ev
 =Çew_node;

203 ++
li°
->
Àn
;

204  
åue
;

205 
	}
}

207 
boﬁ
 
	$li°_ö£π_d©a_©_‰⁄t
(
li°_t
* 
li°
, 
size_t
 
ödex
, c⁄° * 
d©a
)

209 i‡(
NULL
 =
li°
 || NULL =
d©a
 || 0 =
ödex


210 || 
ödex
 > 
li°
->
Àn
 || index < ~list->len)

212 
î∫o
 = 
EINVAL
;

213 
πu∫
 
Ál£
;

216 
li°


217 i‡(
ödex
 < 0)

219 
li°_node_t
* 
cuºít
 = 
li°
->
èû
;

220 
ödex
 < -1)

222 
cuºít
 = cuºít->
¥ev
;

223 ++
ödex
;

225 
	`li°_ö£π_node_©_‰⁄t
(
li°
, 
cuºít
, 
d©a
);

229 
li°_node_t
* 
cuºít
 = 
li°
->
hód
;

230 
ödex
 > 1)

232 
cuºít
 = cuºít->
√xt
;

233 --
ödex
;

235 
	`li°_ö£π_node_©_‰⁄t
(
li°
, 
cuºít
, 
d©a
);

238  
åue
;

239 
	}
}

241 
boﬁ
 
	$li°_ö£π_d©a_©_a·î
(
li°_t
* 
li°
, 
size_t
 
ödex
, c⁄° * 
d©a
)

243 i‡(
NULL
 =
li°
 || NULL =
d©a
 || 0 =
ödex


244 || 
ödex
 > 
li°
->
Àn
 || index < ~(list->len))

246 
î∫o
 = 
EINVAL
;

247  
Ál£
;

250 i‡(
ödex
 < 1)

252 
li°_node_t
* 
cuºít
 = 
li°
->
èû
;

253 
ödex
++ < -1)

255 
cuºít
 = cuºít->
¥ev
;

257 
	`li°_ö£π_node_©_a·î
(
li°
, 
cuºít
, 
d©a
);

261 
li°_node_t
* 
cuºít
 = 
li°
->
hód
;

262 
ödex
-- > 1)

264 
cuºít
 = cuºít->
√xt
;

266 
	`li°_ö£π_node_©_a·î
(
li°
, 
cuºít
, 
d©a
);

269  
åue
;

270 
	}
}

272 
boﬁ
 
	$li°_dñëe_node
(
li°_t
* 
li°
, 
li°_node_t
* 
node
)

274 i‡(
NULL
 =
li°
 || NULL =
node
)

276 
î∫o
 = 
EINVAL
;

277  
Ál£
;

280 i‡(
NULL
 !
node
->
¥ev
)

281 
node
->
¥ev
->
√xt
 =Çode->next;

283 
li°
->
hód
 = 
node
->
√xt
;

285 i‡(
NULL
 !
node
->
√xt
)

286 
node
->
√xt
->
¥ev
 =Çode->prev;

288 
li°
->
èû
 = 
node
->
¥ev
;

289 i‡(
li°
->
de°roy
)

290 
li°
->
	`de°roy
(
node
->
d©a
);

292 
	`LIST_FREE
(
node
);

293 --
li°
->
Àn
;

295  
åue
;

296 
	}
}

298 
boﬁ
 
	$li°_dñëe_d©a_by_ödex
(
li°_t
* 
li°
, 
size_t
 
ödex
)

300 i‡(
NULL
 =
li°
 || 0 =
ödex


301 || 
ödex
 > 
li°
->
Àn
 || index < ~list->len)

303 
î∫o
 = 
EINVAL
;

304  
Ál£
;

307 i‡(
ödex
 < 0)

309 
lsô_node_t
* 
cuºít
 = 
li°
->
èû
;

311 
ödex
++ < -1)

313 
cuºít
 = cuºít->
¥ev
;

315 
	`li°_dñëe_node
(
li°
, 
cuºít
);

319 
li°_node_t
* 
cuºít
 = 
li°
->
hód
;

321 
ödex
-- > 1)

323 
cuºít
 = cuºít->
√xt
;

325 
	`li°_dñëe_node
(
li°
, 
cuºít
);

328  
åue
;

329 
	}
}

331 
	$li°_dñëe_node_by_d©a
(
li°_t
* 
li°
, * 
d©a
)

333 i‡(
NULL
 =
li°
 || NULL =
d©a
)

335 
î∫o
 = 
EINVAL
;

339 
ödex
 = 0;

340 
li°_ôî©‹_t
* 
ôî©‹
 = 
NULL
;

342 
ôî©‹
 = 
	`li°_ôî©‹_¸óã
(
li°
, 
LIST_HEAD
);

344 
	`li°_ôî©‹_node
(
ôî©‹
Ë!
NULL
)

346 i‡(
li°
->
m©ch
)

348 
ödex
++;

349 i‡(0 =
li°
->
	`m©ch
(
	`li°_ôî©‹_d©a
(
ôî©‹
), 
d©a
))

351 
	`li°_dñëe_node
(
li°
, 
	`li°_ôî©‹_node
(
ôîa‹
));

352 
	`li°_ôî©‹_de°roy
(
ôî©‹
);

353  
ödex
;

358 
ödex
++;

359 i‡(
	`li°_ôî©‹_d©a
(
ôî©‹
Ë=
d©a
)

361 
	`li°_dñëe_node
(
li°
, 
	`li°_ôî©‹_node
(
ôî©‹
));

362 
	`li°_ôî©‹_de°roy
(
ôî©‹
);

363  
ödex
;

366 
ôî©‹
 = 
	`li°_ôî©‹_√xt_ôî©‹
(iterator);

368 
	`li°_ôî©‹_de°roy
(
ôøt‹
);

369  
ödex
;

370 
	}
}

373 
li°_ôî©‹_t
* 
	$li°_ôî©î_¸óã
(
li°_t
* 
li°
, 
li°_dúe˘i⁄_t
 
dúe˘i⁄
)

375 
li°_node_t
* 
node
 = 
dúe˘i⁄
 =
LIST_HEAD


376 ? 
li°
->
hód


377 : 
li°
->
èû
;

379  
	`li°_ôî¨‹_¸óã_‰om_node
(
node
, 
dúe˘i⁄
);

380 
	}
}

382 
li°_ôî©‹_t
* 
	$li°_ôî©‹_¸óã_‰ome_node
(
li°_node_t
* 
node
, 
li°_ôî©‹_t
 
dúe˘i⁄
)

384 
li°_ôî©‹_t
* 
ôî©‹
 = 
NULL
;

385 i‡((
ôî©‹
 = (
li°_ôî©‹_t
 *)
	`LIST_MALLOC
(÷i°_ôî©‹_t))Ë=
NULL
)

387 
î∫o
 = 
ENOMEM
;

388  
NULL
;

390 
ôî©‹
->
dúe˘i⁄
 = direction;

391 
ôî©‹
->
√xt
 = 
node
;

393  
ôî©‹
;

394 
	}
}

406 
li°_ôî©‹_t
* 
	$li°_ôî©‹_√xt_ôî©‹
(
li°_ôî©‹_t
* 
ôî©‹
)

408 
ôî©‹
->
√xt
 = iãøt‹->
dúe˘i⁄
 =
LIST_HEAD


409 ? 
ôî©‹
->
√xt
->next

410 : 
ôî©‹
->
√xt
->
¥ev
;

412  
ôî©‹
;

413 
	}
}

415 
	$li°_ôî©‹_de°roy
(
li°_ôî©‹_t
* 
ôî©‹
)

417 
	`LIST_FREE
(
ôî©‹
);

418 
	}
}

420 
boﬁ
 
	$li°_upd©e_d©a
(
li°_t
* 
li°
, 
size_t
 
ödex
, * 
d©a
)

422 i‡(
NULL
 =
li°
 || NULL =
d©a
)

424 
î∫o
 = 
EINVAL
;

425  
NULL
;

428 
li°_node_t
* 
cuºít
 = 
NULL
;

429 i‡(
ödex
 < 0)

431 
cuºít
 = 
li°
->
èû
;

432 
ödex
++ < -1)

434 
cuºít
 = cuºít->
¥ev
;

439 
cuºít
 = 
li°
->
hód
;

440 
ödex
-- > 1)

442 
cuºít
 = cuºít->
√xt
;

446 i‡(
li°
->
dñëed©a
)

448 
li°
->
	`dñëed©a
(
d©a
);

450 
cuºít
->
d©a
 = data;

452  
åue
;

453 
	}
}

456 
	$li°_föd_by_d©a
(
li°_t
* 
li°
, * 
d©a
)

458 i‡(
NULL
 =
li°
 || NULL =
d©a
)

460 
î∫o
 = 
EINVAL
;

464 
ödex
 = 0;

465 
li°_ôî©‹_t
* 
ôî©‹
 = 
NULL
;

466 
ôî©‹
 = 
	`li°_ôî©‹_¸óã
(
li°
, 
LIST_HEAD
);

467 
	`li°_ôî©‹_node
(
ôî©‹
Ë!
NULL
)

469 ++
ödex
;

470 i‡(
li°
->
m©ch
)

472 i‡(0 =
li°
->
	`m©ch
(
	`li°_ôî©‹_d©a
(
ôî©‹
), 
d©a
))

473  
ödex
;

477 i‡(
	`li°_ôî©‹_d©a
(
ôî©‹
Ë=
d©a
)

479  
ödex
;

482 
ôî©‹
 = 
	`li°_ôî©‹_√xt_ôî©‹
(iterator);

485 
	}
}

487 * 
	$li°_föd_by_ödex
(
li°_t
* 
li°
, 
size_t
 
ödex
)

489 i‡(
NULL
 =
li°
)

491 
î∫o
 = 
EINVAL
;

492  
NULL
;

495 
li°_node_t
* 
cuºít
 = 
NULL
;

496 i‡(
ödex
 < 0)

498 
cuºít
 = 
li°
->
èû
;

499 
ödex
++ < -1)

501 
cuºít
 = cuºít->
¥ev
;

506 
cuºít
 = 
li°
->
hód
;

507 
ödex
-- > 1)

509 
cuºít
 = cuºít->
√xt
;

513  
cuºít
->
d©a
;

514 
	}
}

516 
li°_t
* 
	$li°_du∂iˇã
(
li°_t
* 
li°
)

518 i‡(
NULL
 =
li°
)

520 
î∫o
 = 
EINVAL
;

521  
NULL
;

523 
li°_t
* 
c›y_li°
 = 
NULL
;

524 
li°_ôî©‹_t
* 
ôî©‹
 = 
NULL
;

526 i‡((
c›y_li°
 = 
	`li°_¸óã
(

527 
li°
->
L¸óãd©a
,

528 
li°
->
Ldñëed©e
,

529 
li°
->
Lm©ch
,

530 
li°
->
Ldupd©a
,

531 
li°
->
L¥öt
)Ë=
NULL
)

533 
î∫o
 = 
ENOMEM
;

534  
NULL
;

536 
ôî©‹
 = 
	`li°_ôî©‹_¸óã
(
li°
, 
LIST_HEAD
);

537 
	`li°_ôî©‹_node
(
ôî©‹
Ë!
NULL
)

539 * 
d©a
;

541 i‡(
li°
->
du∂iˇã
)

543 
d©a
 = 
li°
->
	`du∂iˇã
(
	`li°_ôî©‹_d©a
(
ôî©‹
));

544 i‡(
NULL
 =
d©a
)

546 
	`li°_de°roy
(
c›y_li°
);

547 
	`li°_ôî©‹_de°roy
(
ôî©‹
);

548  
NULL
;

553 
d©a
 = 
	`li°_ôî©‹_d©a
(
ôî©‹
);

556 i‡(
NULL
 =
	`li°_≠≥nd
(
	`li°_ôî©‹_d©a
(
ôî©‹
), 
d©a
))

559 
	`li°_de°roy
(
c›y_li°
);

560 
	`li°_ôî©‹_de°roy
(
ôî©‹
);

561  
NULL
;

563 
ôî©‹
 = 
	`li°_ôî©‹_√xt_ôî©‹
(iterator);

566 
	`li°_ôî©‹_de°roy
(
ôî©‹
);

568  
c›y_li°
;

569 
	}
}

571 
li°_t
* 
	$li°_ªvîßl
(
li°_t
* 
li°
)

573 i‡(
NULL
 =
li°
)

575 
î∫o
 = 
EINVAL
;

576  
NULL
;

579 
li°_node_t
* 
t›
 = 
li°
->
hód
;

580 
li°_node_t
* 
íd
 = 
li°
->
èû
;

582 
t›
 !
íd
)

584 
li°_node_t
* 
√xt
 = 
t›
->next;

585 
li°_node_t
* 
¥ev
 = 
íd
->prev;

587 
t›
->
√xt
 = 
NULL
;

588 
t›
->
¥ev
 =Örev;

589 
íd
->
√xt
 =Çext;

590 
íd
->
¥ev
 = 
NULL
;

591 
√xt
->
¥ev
 = 
íd
;

592 
¥ev
->
√xt
 = 
t›
;

594 
t›
 = 
√xt
;

595 
íd
 = 
¥ev
;

598  
li°
;

599 
	}
}

601 
	$li°_¥öt
(
li°_t
* 
li°
)

603 i‡(
NULL
 =
li°
)

605 
î∫o
 = 
EINVAL
;

609 
ôî©‹
 = 
	`li°_ôî©‹_¸óã
(
li°
, 
LIST_HEAD
);

611 
	`li°_ôî©‹_node
(
ôî©‹
Ë!
NULL
)

613 i‡(
li°
->
L¥öt
)

615 
li°
->
	`L¥öt
(
	`li°_ôî©‹_d©a
(
ôî©‹
));

618 
ôî©‹
 = 
	`li°_ôî©‹_√xt_ôî©‹
(iterator);

620 
	}
}

	@queue/haha.c

1 
	~<°dio.h
>

2 
	$maö
 ()

5 
i
, 
a
[4];

6 * 
p
=
a
 ;

8 
i
=0;i<4;i++)

9 
	`sˇnf
(" %d", &
p
[
i
]);

10 
	`¥ötf
 (" \n" );

15 
i
=0;i<4;i++)

16 
	`¥ötf
 (" %d\t\n", 
p
[
i
]);

17 
	`¥ötf
 (" %#x\n", 
a
 );

19 
	`¥ötf
 (" %d\n", 
a
[0]);

20 
	`¥ötf
 (" %#x\n", 
a
);

22 
	`¥ötf
("type int hasá size of %u byte \n ", ());

23 
	`¥ötf
("type int hasá size of %u byte\n", ());

24 
	`¥ötf
("type char hasá size of %u byte \n ", ());

25 
	`¥ötf
("type double hasá size of %u byte \n ", ());

26 
	`¥ötf
("typeÜong int hasá size of %u byte \n ", ());

27 
	`¥ötf
("type short int hasá size of %u byte\n ", ());

28 
	`¥ötf
("\n");

29 
	`¥ötf
("type int hasá size of %d byte \n ", ());

30 
	`¥ötf
("type int hasá size of %d byte\n", ());

31 
	`¥ötf
("type char hasá size of %d byte \n ", ());

32 
	`¥ötf
("type double hasá size of %d byte \n ", ());

33 
	`¥ötf
("typeÜong int hasá size of %d byte \n ", ());

34 
	`¥ötf
("type short int hasá size of %d byte\n ", ());

39 
	}
}

	@queue/main.c

1 
	~<°dio.h
>

2 
	$maö
()

4 
	`¥ötf
("%d\n", ());

5 
	}
}

	@queue/palindrome.c

14 
	~<°dio.h
>

15 
	~<°dlib.h
>

16 
	~<î∫o.h
>

17 
	~"°ack.h
"

18 
	~"queue.h
"

20 
îr_exô
(*
°r_îr
);

21 
°ack_push_°rög
(
p_°ack_t
 
°ack
, *
°rög
);

22 
queue_push_°rög
(
p_queue_t
 
queue
, *
°rög
);

23 
com∑ª
(
p_°ack_t
 
°ack
, 
p_queue_t
 
queue
);

24 
¥öt
(*
d©a
);

26 
	$maö
(
¨gc
, *
¨gv
[])

28 
p_°ack_t
 
°ack
 = 
NULL
;

29 
p_queue_t
 
queue
 = 
NULL
;

30 
buf„r
[1024] = {0};

33 
°ack
 = 
	`°ack_¸óã
();

34 
queue
 = 
	`queue_¸óã
();

35 i‡(
°ack
 =
NULL
 || 
queue
 == NULL)

37 
	`îr_exô
("createÉrror");

40 
	`¥ötf
("Please inputá string!\n");

41 
	`fgës
(
buf„r
, 1024, 
°dö
))

43 
	`°ack_push_°rög
(
°ack
, 
buf„r
);

44 
	`queue_push_°rög
(
queue
, 
buf„r
);

45 
	`¥ötf
("---%c---\n", *(*)
	`queue_gëhód
(
queue
));

46 
	`¥ötf
("---%c---\n", *(*)
	`gë_t›
(
°ack
));

47 
	`queue_¥öt
(
queue
, 
¥öt
);

48 
	`°ack_¥öt
(
°ack
, 
¥öt
);

50 i‡(
	`com∑ª
(
°ack
, 
queue
) == 1)

52 
	`¥ötf
("ÂõûÊñá!\n");

56 
	`¥ötf
("‰∏çÊòØÂõûÊñá!\n");

61 
	`¥ötf
("Done!\n");

63 
	}
}

65 
	$îr_exô
(*
°r_îr
)

67 
	`≥º‹
(
°r_îr
);

68 
	`exô
(
EXIT_FAILURE
);

69 
	}
}

71 
	$°ack_push_°rög
(
p_°ack_t
 
°ack
, *
°rög
)

73 *
°rög
)

75 
	`°ack_push
(
°ack
, 
°rög
);

76 
°rög
++;

79 
	}
}

81 
	$queue_push_°rög
(
p_queue_t
 
queue
, *
°rög
)

83 *
°rög
)

85 
	`queue_put
(
queue
, 
°rög
);

86 
°rög
++;

89 
	}
}

91 
	$com∑ª
(
p_°ack_t
 
°ack
, 
p_queue_t
 
queue
)

93 
p_¶node_t
 
hód
 = 
°ack
->
t›
;

94 
hód
)

96 i‡(*(*)
	`queue_gëhód
(
queue
)

97 !*(*)
hód
->
d©a
)

101 
hód
 = hód->
√xt
;

102 
	`°ack_p›
(
°ack
);

103 
	`queue_dñëe
(
queue
);

107 
	}
}

109 
	$¥öt
(*
d©a
)

111 
	`¥ötf
("%¯", *(*)
d©a
);

112 
	}
}

	@queue/queue.c

13 
	~<°dio.h
>

14 
	~<°dlib.h
>

15 
	~<î∫o.h
>

16 
	~"queue.h
"

18 
p_q_node_t
 
	$node_¸óã
(*
d©a
)

20 
p_q_node_t
 
√w_node
 = 
NULL
;

21 
√w_node
 = (
p_q_node_t
)
	`mÆloc
((
q_node_t
));

22 i‡(
NULL
 =
√w_node
)

24 
î∫o
 = 
ENOMEM
;

25  
NULL
;

27 
√w_node
->
d©a
 = data;

28 
√w_node
->
√xt
 = 
NULL
;

29  
√w_node
;

30 
	}
}

32 
p_queue_t
 
	$queue_¸óã
()

34 
p_queue_t
 
queue
 = 
NULL
;

36 
queue
 = (
p_queue_t
)
	`mÆloc
((
queue_t
));

37 i‡(
NULL
 =
queue
)

39 
î∫o
 = 
ENOMEM
;

40  
NULL
;

42 
queue
->
hód
 = (
p_q_node_t
)
	`mÆloc
((
q_node_t
));

43 i‡(
NULL
 =
queue
->
hód
)

45 
	`‰ì
(
queue
);

46 
î∫o
 = 
ENOMEM
;

47  
NULL
;

49 
queue
->
size
 = 0;

50 
queue
->
hód
->
d©a
 = 
NULL
;

51 
queue
->
hód
->
√xt
 = 
NULL
;

52 
queue
->
èû
 = queue->
hód
;

54  
queue
;

55 
	}
}

57 
boﬁ
 
	$queue_de°roy
(
p_queue_t
 
queue
)

59 i‡(
NULL
 =
queue
)

61 
î∫o
 = 
EINVAL
;

62  
Ál£
;

65 
size_t
 
cou¡
;

67 
cou¡
 = 
queue
->
size
; count >= 1; count--)

69 
	`queue_dñëe
(
queue
);

71 
	`‰ì
(
queue
);

73  
åue
;

74 
	}
}

76 
boﬁ
 
	$queue_em±y
(
p_queue_t
 
queue
)

78 i‡(
NULL
 =
queue
)

80 
î∫o
 = 
EINVAL
;

81  
Ál£
;

84  (
queue
->
size
 == 0);

85 
	}
}

87 *
	$queue_gëhód
(
p_queue_t
 
queue
)

89 i‡(
NULL
 =
queue
 || 0 =queue->
size
)

91 
î∫o
 = 
EINVAL
;

92  
NULL
;

95  
queue
->
hód
->
d©a
;

96 
	}
}

98 
boﬁ
 
	$queue_put
(
p_queue_t
 
queue
, *
d©a
)

100 i‡(
NULL
 =
queue
 || NULL =
d©a
)

102 
î∫o
 = 
EINVAL
;

103  
Ál£
;

105 i‡(
queue
->
size
 == 0)

107 
queue
->
hód
->
d©a
 = data;

108 
queue
->
size
++;

109  
åue
;

112 
p_q_node_t
 
√w_node
 = 
NULL
;

113 
√w_node
 = (
p_q_node_t
)
	`mÆloc
((
q_node_t
));

114 i‡(
NULL
 =
√w_node
)

116 
î∫o
 = 
ENOMEM
;

117  
Ál£
;

119 
√w_node
->
d©a
 = data;

120 
√w_node
->
√xt
 = 
NULL
;

122 
queue
->
èû
->
√xt
 = 
√w_node
;

123 
queue
->
èû
 = 
√w_node
;

124 
queue
->
size
++;

126  
åue
;

127 
	}
}

129 
boﬁ
 
queue_ö£π_maxsize
(
p_queue_t
 
queue
, *
d©a
,

130 (*
com∑ª
)(*
d©a1
, *
d©a2
))

132 i‡(
NULL
 =
queue
)

134 
î∫o
 = 
EINVAL
;

135  
Ál£
;

138 i‡(
queue
->
size
 == 0)

140 
queue
->
hód
->
d©a
 = data;

141 
queue
->
size
++;

142  
åue
;

146 
p_q_node_t
 
√w_node
 = 
NULL
;

147 
√w_node
 = 
	`node_¸óã
(
d©a
);

148 i‡(
NULL
 =
√w_node
)

150 
î∫o
 = 
ENOMEM
;

151  
Ál£
;

154 
p_q_node_t
 
hód
 = 
queue
->head;

155 
p_q_node_t
 
ãmp
 = 
NULL
;

156 
hód
 !
NULL
)

158 i‡(1 =
	`com∑ª
(
hód
->
d©a
, data))

160 
ãmp
 = 
hód
;

161 
hód
 = hód->
√xt
;

165 i‡(
hód
 =
queue
->head)

167 
√w_node
->
√xt
 = 
queue
->
hód
;

168 
queue
->
hód
 = 
√w_node
;

169 
queue
->
size
++;

174 
ãmp
->
√xt
 = 
√w_node
;

175 
√w_node
->
√xt
 = 
hód
;

176 
queue
->
size
++;

182  
åue
;

183 
	}
}

185 
boﬁ
 
queue_ö£π_mösize
(
p_queue_t
 
queue
, *
d©a
,

186 (*
com∑ª
)(*
d©a1
, *
d©a2
))

188 i‡(
NULL
 =
queue
)

190 
î∫o
 = 
EINVAL
;

191  
Ál£
;

194 i‡(
queue
->
size
 == 0)

196 
queue
->
hód
->
d©a
 = data;

197 
queue
->
size
++;

198  
åue
;

201 
p_q_node_t
 
√w_node
 = 
NULL
;

202 
√w_node
 = 
	`node_¸óã
(
d©a
);

203 i‡(
NULL
 =
√w_node
)

205 
î∫o
 = 
ENOMEM
;

206  
Ál£
;

209 
p_q_node_t
 
hód
 = 
queue
->head;

210 
p_q_node_t
 
ãmp
 = 
NULL
;

211 
hód
 !
NULL
)

213 i‡(-1 =
	`com∑ª
(
hód
->
d©a
, data))

215 
ãmp
 = 
hód
;

216 
hód
 = hód->
√xt
;

217 i‡(
NULL
 =
hód
)

219 
ãmp
->
√xt
 = 
√w_node
;

220 
√w_node
->
√xt
 = 
NULL
;

221 
queue
->
èû
 = 
√w_node
;

222 
queue
->
size
++;

223  
åue
;

228 i‡(
hód
 =
queue
->head)

230 
√w_node
->
√xt
 = 
queue
->
hód
;

231 
queue
->
hód
 = 
√w_node
;

232 
queue
->
size
++;

237 
ãmp
->
√xt
 = 
√w_node
;

238 
√w_node
->
√xt
 = 
hód
;

239 
queue
->
size
++;

244  
åue
;

245 
	}
}

246 
boﬁ
 
	$queue_dñëe
(
p_queue_t
 
queue
)

248 i‡(
NULL
 =
queue
 || 0 =queue->
size
)

250 
î∫o
 = 
EINVAL
;

251  
Ál£
;

254 
p_q_node_t
 
hód
 = 
queue
->head;

256 
queue
->
hód
 = queue->hód->
√xt
;

257 
	`‰ì
(
hód
->
d©a
);

258 
	`‰ì
(
hód
);

259 
queue
->
size
--;

261  
åue
;

262 
	}
}

264 
queue_¥öt
(
p_queue_t
 
queue
, (*
Â
)(*
d©a
))

266 i‡(
NULL
 =
queue
 || 0 =queue->
size
)

268 
î∫o
 = 
EINVAL
;

272 
p_q_node_t
 
hód
 = 
queue
->head;

273 
hód
)

275 (*
Â
)(
hód
->
d©a
);

276 
hód
 = hód->
√xt
;

278 
	}
}

	@queue/queue.h

13 #i‚de‡
__QUEUE_H__


14 
	#__QUEUE_H__


	)

16 
	~<°dboﬁ.h
>

17 
	~<°ddef.h
>

20 
	sq_node


22 *
	md©a
;

23 
q_node
 *
	m√xt
;

24 }
	tq_node_t
, *
	tp_q_node_t
;

27 
	squeue


29 
size_t
 
	msize
;

30 
p_q_node_t
 
	mhód
;

31 
p_q_node_t
 
	mèû
;

32 }
	tqueue_t
, *
	tp_queue_t
;

35 
p_queue_t
 
queue_¸óã
();

37 
boﬁ
 
queue_de°roy
(
p_queue_t
 
queue
);

39 
boﬁ
 
queue_em±y
(
p_queue_t
 
queue
);

41 *
queue_gëhód
(
p_queue_t
 
queue
);

43 
boﬁ
 
queue_put
(
p_queue_t
 
queue
, *
d©a
);

45 
boﬁ
 
queue_ö£π_maxsize
(
p_queue_t
 
queue
, *
d©a
,

46 (*
com∑ª
)(*
d©a1
, *
d©a2
));

52 
boﬁ
 
	`queue_ö£π_mösize
(
p_queue_t
 
queue
, *
d©a
,

53 (*
com∑ª
)(*
d©a1
, *
d©a2
));

55 
boﬁ
 
	`queue_dñëe
(
p_queue_t
 
queue
);

57 
	`queue_¥öt
(
p_queue_t
 
queue
, (*
Â
)(*
d©a
));

	@queue/stack.c

13 
	~<°dio.h
>

14 
	~<°dlib.h
>

15 
	~<î∫o.h
>

16 
	~"°ack.h
"

18 
p_¶node_t
 
	$node_¸óã
(*
d©a
)

20 
p_¶node_t
 
√w_node
 = 
NULL
;

22 
√w_node
 = (
p_¶node_t
)
	`mÆloc
((
¶node_t
));

23 i‡(
NULL
 =
√w_node
)

25 
î∫o
 = 
ENOMEM
;

26  
NULL
;

29 
√w_node
->
d©a
 = data;

30 
√w_node
->
√xt
 = 
NULL
;

32  
√w_node
;

33 
	}
}

35 
p_°ack_t
 
	$°ack_¸óã
()

37 
p_°ack_t
 
°ack_ªt
 = 
NULL
;

39 
°ack_ªt
 = (
p_°ack_t
)
	`mÆloc
((
°ack_t
));

40 i‡(
NULL
 =
°ack_ªt
)

42 
î∫o
 = 
ENOMEM
;

43  
NULL
;

46 
°ack_ªt
->
t›
 = 
	`node_¸óã
(
NULL
);

47 i‡(
NULL
 =
°ack_ªt
->
t›
)

49 
	`‰ì
(
°ack_ªt
);

50 
î∫o
 = 
ENOMEM
;

51  
NULL
;

54 
°ack_ªt
->
size
 = 0;

55 
°ack_ªt
->
ba£
 = sèck_ªt->
t›
;

57  
°ack_ªt
;

58 
	}
}

60 
boﬁ
 
	$°ack_de°roy
(
p_°ack_t
 
°ack
)

62 i‡(
NULL
 =
°ack
 || NULL =°ack->
t›
)

64 
î∫o
 = 
EINVAL
;

65  
Ál£
;

68 
size_t
 
cou¡
 = 
°ack
->
size
;

70 ; 
cou¡
 > 0; count--)

72 
	`°ack_p›
(
°ack
);

75  
åue
;

76 
	}
}

78 
boﬁ
 
	$°ack_em±y
(c⁄° 
p_°ack_t
 
°ack
)

80 i‡(
NULL
 =
°ack
 || NULL =°ack->
t›
)

82 
î∫o
 = 
EINVAL
;

83  
Ál£
;

86  (
°ack
->
size
 == 0);

87 
	}
}

89 
boﬁ
 
	$°ack_push
(
p_°ack_t
 
°ack
, *
d©a
)

91 i‡(
NULL
 =
°ack
 || NULL =°ack->
t›
)

93 
î∫o
 = 
EINVAL
;

94  
Ál£
;

97 i‡(0 =
°ack
->
size
)

99 
°ack
->
t›
->
d©a
 = data;

100 
°ack
->
size
++;

101  
åue
;

104 
p_¶node_t
 
√w_node
 = 
NULL
;

105 
√w_node
 = 
	`node_¸óã
(
d©a
);

106 i‡(
NULL
 =
√w_node
)

108 
î∫o
 = 
ENOMEM
;

109  
Ál£
;

112 
√w_node
->
√xt
 = 
°ack
->
t›
;

113 
°ack
->
t›
 = 
√w_node
;

114 
°ack
->
size
++;

116  
åue
;

117 
	}
}

119 
boﬁ
 
	$°ack_p›
(
p_°ack_t
 
°ack
)

121 i‡(
NULL
 =
°ack
 || 0 =°ack->
size
)

123 
î∫o
 = 
EINVAL
;

124  
Ál£
;

127 
p_¶node_t
 
t›
 = 
°ack
->top;

128 
°ack
->
t›
 =Å›->
√xt
;

129 
	`‰ì
(
t›
->
d©a
);

130 
	`‰ì
(
t›
);

131 
°ack
->
size
--;

133  
åue
;

134 
	}
}

136 *
	$gë_t›
(c⁄° 
p_°ack_t
 
°ack
)

138 i‡(
NULL
 =
°ack
 || 0 =°ack->
size
)

140 
î∫o
 = 
EINVAL
;

141  
NULL
;

144  
°ack
->
t›
->
d©a
;

145 
	}
}

147 
°ack_¥öt
(c⁄° 
p_°ack_t
 
°ack
, (*
Â
)(*
d©a
))

149 i‡(
NULL
 =
°ack
 || 0 =°ack->
size
)

151 
î∫o
 = 
EINVAL
;

155 
p_¶node_t
 
t›
 = 
°ack
->top;

157 
t›
)

159 (*
Â
)(
t›
->
d©a
);

160 
t›
 =Å›->
√xt
;

162 
	}
}

	@queue/stack.h

13 #i‚de‡
__STACK_H__


14 
	#__STACK_H__


	)

16 
	~<°dboﬁ.h
>

17 
	~<°ddef.h
>

20 
	s¶node


22 *
	md©a
;

23 
¶node
 *
	m√xt
;

24 }
	t¶node_t
, *
	tp_¶node_t
;

27 
	s°ack


29 
size_t
 
	msize
;

30 
¶node
 *
	mt›
;

31 
¶node
 *
	mba£
;

32 }
	t°ack_t
, *
	tp_°ack_t
;

36 
p_°ack_t
 
°ack_¸óã
();

38 
boﬁ
 
°ack_de°roy
(
p_°ack_t
 
°ack
);

40 
boﬁ
 
°ack_em±y
(c⁄° 
p_°ack_t
 
°ack
);

42 
boﬁ
 
°ack_push
(
p_°ack_t
 
°ack
, *
d©a
);

44 
boﬁ
 
°ack_p›
(
p_°ack_t
 
°ack
);

46 *
gë_t›
(c⁄° 
p_°ack_t
 
°ack
);

48 
°ack_¥öt
(c⁄° 
p_°ack_t
 
°ack
, (*
Â
)(*
d©a
));

	@queue/test.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~<time.h
>

4 
	~<î∫o.h
>

5 
	~"queue.h
"

7 
show
(*
d©a
);

8 
com∑ª
(*
d©a1
, *
d©a2
);

9 
îr_exô
(*
°r_îr
);

10 
	$maö
()

12 
	`¥ötf
("-----------------------\n");

13 
p_queue_t
 
queue
 = 
NULL
;

14 
i
;

15 *
a
 = (*)
	`mÆloc
(() * 10);

16 
i
 = 0; i < 10; i++)

18 
a
[
i
] = i;

20 
i
 = 0; i < 10; i++)

22 
	`¥ötf
("%4d", 
a
[
i
]);

24 
	`putch¨
('\n');

25 
	`¥ötf
("-----------------------\n");

26 
queue
 = 
	`queue_¸óã
();

27 i‡(
NULL
 =
queue
)

28 
	`îr_exô
("createÉrror");

29 
	`queue_¥öt
(
queue
, 
show
);

30 
	`¥ötf
("-----------------------\n");

32 i‡(
	`queue_em±y
(
queue
))

33 
	`¥ötf
("empty\n");

34 
i
 = 0; i < 10; i++)

36 i‡(!
	`queue_put
(
queue
, &
a
[
i
]))

37 
	`îr_exô
("putÉrror");

39 i‡(!
	`queue_em±y
(
queue
))

40 
	`¥ötf
("full\n");

42 
	`queue_¥öt
(
queue
, 
show
);

43 
	`¥ötf
("\n%d\n", 
queue
->
size
);

44 
	`¥ötf
("%d\n", *(*)
queue
->
hód
->
d©a
);

45 
	`¥ötf
("%d\n", *(*)
	`queue_gëhód
(
queue
));

46 *
c
 = (*)
	`mÆloc
(());

47 *
c
 = 4;

48 i‡(
	`queue_put
(
queue
, 
c
))

49 
	`¥ötf
("%d\n", 
queue
->
size
);

51 
	`queue_¥öt
(
queue
, 
show
);

52 i‡(
	`queue_dñëe
(
queue
))

53 
	`¥ötf
("\n%d\n", 
queue
->
size
);

54 
	`¥ötf
("\n%d\n", *(*)
queue
->
hód
->
d©a
);

55 
	`¥ötf
("%d\n", *(*)
	`queue_gëhód
(
queue
));

56 
	`queue_¥öt
(
queue
, 
show
);

58 
	`putch¨
('\n');

62 
	`¥ötf
("****************************************************\n");

63 
p_queue_t
 
queue_ã°
 = 
NULL
;

64 
queue_ã°
 = 
	`queue_¸óã
();

66 
i
 = 0; i < 10; i++)

68 i‡(
	`queue_ö£π_maxsize
(
queue_ã°
, &
a
[
i
], 
com∑ª
Ë=
Ál£
)

69 
	`îr_exô
("putÉrror");

72 
	`queue_¥öt
(
queue_ã°
, 
show
);

73 
	`putch¨
('\n');

77 
	`¥ötf
("&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&\n");

83 
i
 = 0; i < 10; i++)

85 i‡(
	`queue_ö£π_mösize
(
queue_ã°
, &
a
[
i
], 
com∑ª
Ë=
Ál£
)

86 
	`îr_exô
("putÉrror");

88 
	`queue_¥öt
(
queue_ã°
, 
show
);

89 
	`¥ötf
("\n\n");

90 
i
 = 0; i < 10; i++)

92 i‡(
	`queue_ö£π_mösize
(
queue_ã°
, &
a
[
i
], 
com∑ª
Ë=
Ál£
)

93 
	`îr_exô
("putÉrror");

95 
	`queue_¥öt
(
queue_ã°
, 
show
);

96 
	`putch¨
('\n');

99 
	`¥ötf
("############################################################\n");

100 *
p
 = (*)
	`mÆloc
(()* 10);

101 
i
 = 0; i < 10; i++)

103 
p
[
i
] = i % 3;

106 
i
 = 0; i < 10; i++)

108 
	`¥ötf
("%4d", 
p
[
i
]);

110 
	`putch¨
('\n');

111 
p_queue_t
 
ã°
 = 
NULL
;

112 
ã°
 = 
	`queue_¸óã
();

113 i‡(
NULL
 =
ã°
)

114 
	`îr_exô
("createÉrror");

116 
i
 = 0; i < 10; i++)

118 i‡(
	`queue_ö£π_mösize
(
ã°
, 
p
 + 
i
, 
com∑ª
Ë=
Ál£
)

119 
	`îr_exô
("putÉrror");

121 
	`queue_¥öt
(
ã°
, 
show
);

122 
	`putch¨
('\n');

124 
	`¥ötf
("%4d\n", 
ã°
->
size
);

125 
	`¥ötf
("%4d\n",*((*)
ã°
->
hód
->
d©a
));

126 
	`¥ötf
("%4d\n", *((*)
ã°
->
hód
->
√xt
->
d©a
));

128 
	`queue_de°roy
(
ã°
);

129 
	`putch¨
('\n');

131 
	}
}

133 
	$îr_exô
(*
°r_îr
)

135 
	`≥º‹
(
°r_îr
);

136 
	`exô
(
EXIT_FAILURE
);

137 
	}
}

139 
	$show
(*
d©a
)

141 
	`¥ötf
("%4d", *(*)
d©a
);

142 
	}
}

144 
	$com∑ª
(*
d©a1
, *
d©a2
)

146 *
p
 = (*)
d©a1
;

147 *
q
 = (*)
d©a2
;

149 i‡((*
p
 - *
q
) > 0)

151 i‡((*
p
 - *
q
) == 0)

153 i‡((*
p
 - *
q
) < 0)

156 
	}
}

	@stack/stack.c

13 
	~<°dio.h
>

14 
	~<°dlib.h
>

15 
	~<î∫o.h
>

16 
	~"°ack.h
"

18 
p_¶node_t
 
	$node_¸óã
(*
d©a
)

20 
p_¶node_t
 
√w_node
 = 
NULL
;

22 
√w_node
 = (
p_¶node_t
)
	`mÆloc
((
¶node_t
));

23 i‡(
NULL
 =
√w_node
)

25 
î∫o
 = 
ENOMEM
;

26  
NULL
;

29 
√w_node
->
d©a
 = data;

30 
√w_node
->
√xt
 = 
NULL
;

32  
√w_node
;

33 
	}
}

35 
p_°ack_t
 
	$°ack_¸óã
()

37 
p_°ack_t
 
°ack_ªt
 = 
NULL
;

39 
°ack_ªt
 = (
p_°ack_t
)
	`mÆloc
((
°ack_t
));

40 i‡(
NULL
 =
°ack_ªt
)

42 
î∫o
 = 
ENOMEM
;

43  
NULL
;

46 
°ack_ªt
->
t›
 = 
	`node_¸óã
(
NULL
);

47 i‡(
NULL
 =
°ack_ªt
->
t›
)

49 
	`‰ì
(
°ack_ªt
);

50 
î∫o
 = 
ENOMEM
;

51  
NULL
;

54 
°ack_ªt
->
size
 = 0;

55 
°ack_ªt
->
ba£
 = sèck_ªt->
t›
;

57  
°ack_ªt
;

58 
	}
}

60 
boﬁ
 
	$°ack_de°roy
(
p_°ack_t
 
°ack
)

62 i‡(
NULL
 =
°ack
 || NULL =°ack->
t›
)

64 
î∫o
 = 
EINVAL
;

65  
Ál£
;

68 
size_t
 
cou¡
 = 
°ack
->
size
;

70 ; 
cou¡
 > 0; count--)

72 
	`°ack_p›
(
°ack
);

75  
åue
;

76 
	}
}

78 
boﬁ
 
	$°ack_em±y
(c⁄° 
p_°ack_t
 
°ack
)

80 i‡(
NULL
 =
°ack
 || NULL =°ack->
t›
)

82 
î∫o
 = 
EINVAL
;

83  
Ál£
;

86  (
°ack
->
size
 == 0);

87 
	}
}

89 
boﬁ
 
	$°ack_push
(
p_°ack_t
 
°ack
, *
d©a
)

91 i‡(
NULL
 =
°ack
 || NULL =°ack->
t›
)

93 
î∫o
 = 
EINVAL
;

94  
Ál£
;

97 i‡(0 =
°ack
->
size
)

99 
°ack
->
t›
->
d©a
 = data;

100 
°ack
->
size
++;

101  
åue
;

104 
p_¶node_t
 
√w_node
 = 
NULL
;

105 
√w_node
 = 
	`node_¸óã
(
d©a
);

106 i‡(
NULL
 =
√w_node
)

108 
î∫o
 = 
ENOMEM
;

109  
Ál£
;

112 
√w_node
->
√xt
 = 
°ack
->
t›
;

113 
°ack
->
t›
 = 
√w_node
;

114 
°ack
->
size
++;

116  
åue
;

117 
	}
}

119 
boﬁ
 
	$°ack_p›
(
p_°ack_t
 
°ack
)

121 i‡(
NULL
 =
°ack
 || 0 =°ack->
size
)

123 
î∫o
 = 
EINVAL
;

124  
Ál£
;

127 
p_¶node_t
 
t›
 = 
°ack
->top;

128 
°ack
->
t›
 =Å›->
√xt
;

129 
	`‰ì
(
t›
->
d©a
);

130 
	`‰ì
(
t›
);

131 
°ack
->
size
--;

133  
åue
;

134 
	}
}

136 *
	$gë_t›
(c⁄° 
p_°ack_t
 
°ack
)

138 i‡(
NULL
 =
°ack
 || 0 =°ack->
size
)

140 
î∫o
 = 
EINVAL
;

141  
NULL
;

144  
°ack
->
t›
->
d©a
;

145 
	}
}

147 
°ack_¥öt
(c⁄° 
p_°ack_t
 
°ack
, (*
Â
)(*
d©a
))

149 i‡(
NULL
 =
°ack
 || 0 =°ack->
size
)

151 
î∫o
 = 
EINVAL
;

155 
p_¶node_t
 
t›
 = 
°ack
->top;

157 
t›
)

159 (*
Â
)(
t›
->
d©a
);

160 
t›
 =Å›->
√xt
;

162 
	}
}

	@stack/stack.h

13 #i‚de‡
__STACK_H__


14 
	#__STACK_H__


	)

16 
	~<°dboﬁ.h
>

17 
	~<°ddef.h
>

20 
	s¶node


22 *
	md©a
;

23 
¶node
 *
	m√xt
;

24 }
	t¶node_t
, *
	tp_¶node_t
;

27 
	s°ack


29 
size_t
 
	msize
;

30 
¶node
 *
	mt›
;

31 
¶node
 *
	mba£
;

32 }
	t°ack_t
, *
	tp_°ack_t
;

36 
p_°ack_t
 
°ack_¸óã
();

38 
boﬁ
 
°ack_de°roy
(
p_°ack_t
 
°ack
);

40 
boﬁ
 
°ack_em±y
(c⁄° 
p_°ack_t
 
°ack
);

42 
boﬁ
 
°ack_push
(
p_°ack_t
 
°ack
, *
d©a
);

44 
boﬁ
 
°ack_p›
(
p_°ack_t
 
°ack
);

46 *
gë_t›
(c⁄° 
p_°ack_t
 
°ack
);

48 
°ack_¥öt
(c⁄° 
p_°ack_t
 
°ack
, (*
Â
)(*
d©a
));

	@stack/test.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~"°ack.h
"

6 
îr_exô
(*
îr_°r
);

7 *
make
(
n
);

8 
¥öt
(*
d©a
);

9 
	$maö
(
¨gc
, *
¨gv
[])

11 
p_°ack_t
 
°ack
;

12 
°ack
 = 
	`°ack_¸óã
();

13 i‡(
NULL
 =
°ack
)

15 
	`îr_exô
("createÉrror");

17 
	`¥ötf
("----------------->%s<----------------\n", 
	`°ack_em±y
(
°ack
) ? "empty" : "full");

18 
i
 = 0;

19 ; 
i
 < 10; i++)

21 i‡(!
	`°ack_push
(
°ack
, 
	`make
(
i
)))

23 
	`îr_exô
("pushÉrror");

26 
	`¥ötf
("----------------->%s<----------------\n", 
	`°ack_em±y
(
°ack
) ? "empty" : "full");

27 
	`putch¨
('\n');

29 
	`°ack_¥öt
(
°ack
, 
¥öt
);

30 
	`¥ötf
("\nThêfú° d©®i†%d\n", *(*)
	`gë_t›
(
°ack
));

31 
	`putch¨
('\n');

33 i‡(!
	`°ack_push
(
°ack
, 
	`make
(10)))

35 
	`îr_exô
("pushÉrror");

37 
	`°ack_¥öt
(
°ack
, 
¥öt
);

38 
	`¥ötf
("\nThêfú° d©®i†%d\n", *(*)
	`gë_t›
(
°ack
));

39 
	`putch¨
('\n');

41 i‡(!
	`°ack_p›
(
°ack
))

43 
	`îr_exô
("popÉrror");

45 
	`°ack_¥öt
(
°ack
, 
¥öt
);

46 
	`¥ötf
("\nThêfú° d©®i†%d\n", *(*)
	`gë_t›
(
°ack
));

47 
	`putch¨
('\n');

49 
	`°ack_de°roy
(
°ack
);

53 
	}
}

55 
	$îr_exô
(*
îr_°r
)

57 
	`≥º‹
(
îr_°r
);

58 
	`exô
(
EXIT_FAILURE
);

59 
	}
}

61 *
	$make
(
n
)

63 *
p
 = (*)
	`mÆloc
(());

64 i‡(
NULL
 =
p
)

66 
	`îr_exô
("mallocÉrror");

69 *
p
 = 
n
;

71  
p
;

72 
	}
}

74 
	$¥öt
(*
d©a
)

76 
	`¥ötf
("%4d", *(*)
d©a
);

77 
	}
}

	@test.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

3 
	~"li°.h
"

5 * 
¸óãd©a
(* 
d©a
);

6 
dñëed©a
(* 
d©a
);

7 
m©ch
(* 
d©a1
, * 
d©a2
);

8 * 
dupd©a
(* 
d©a
);

9 
¥öt
(* 
d©a
);

10 
îr_exô
(* 
îr_°r
);

12 
	$maö
(
¨gc
, * 
¨gv
[])

14 
i
 = 10;

15 
li°_t
* 
li°
 = 
NULL
;

17 
li°
 = 
	`li°_¸óã
(

18 
¸óãd©a
,

19 
dñëed©a
,

20 
m©ch
,

21 
dupd©a
,

22 
¥öt
,

23 &
i
);

27 
	}
}

29 * 
	$¸óãd©a
(* 
d©a
)

31 * 
ñemít
 = 
NULL
;

32 
ñemít
 = (*)
	`mÆloc
(());

33 i‡(
NULL
 =
ñemít
)

35 
	`îr_exô
("createÉlementÉrror");

37 
ñemít
 = 
d©a
;

38  
ñemít
;

39 
	}
}

	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

146 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


148 
	#P_tmpdú
 "/tmp"

	)

161 
	~<bôs/°dio_lim.h
>

165 
_IO_FILE
 *
°dö
;

166 
_IO_FILE
 *
°dout
;

167 
_IO_FILE
 *
°dîr
;

169 
	#°dö
 
°dö


	)

170 
	#°dout
 
°dout


	)

171 
	#°dîr
 
°dîr


	)

173 
__BEGIN_NAMESPACE_STD


175 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

177 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

178 
__END_NAMESPACE_STD


180 #ifde‡
__USE_ATFILE


182 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

183 
__c⁄°
 *
__√w
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


191 #i‚de‡
__USE_FILE_OFFSET64


192 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

194 #ifde‡
__REDIRECT


195 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

197 
	#tmpfûe
 
tmpfûe64


	)

201 #ifde‡
__USE_LARGEFILE64


202 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

206 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

207 
__END_NAMESPACE_STD


209 #ifde‡
__USE_MISC


212 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

216 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


224 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

225 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

229 
__BEGIN_NAMESPACE_STD


234 
	`f˛o£
 (
FILE
 *
__°ªam
);

239 
	`fÊush
 (
FILE
 *
__°ªam
);

240 
__END_NAMESPACE_STD


242 #ifde‡
__USE_MISC


249 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

252 #ifde‡
__USE_GNU


259 
	`f˛o£Æl
 ();

263 
__BEGIN_NAMESPACE_STD


264 #i‚de‡
__USE_FILE_OFFSET64


269 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

270 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

275 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

276 
__c⁄°
 *
__ª°ri˘
 
__modes
,

277 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

279 #ifde‡
__REDIRECT


280 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

281 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

282 
__wur
;

283 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

284 
__c⁄°
 *
__ª°ri˘
 
__modes
,

285 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

286 
__wur
;

288 
	#f›í
 
f›í64


	)

289 
	#‰e›í
 
‰e›í64


	)

292 
__END_NAMESPACE_STD


293 #ifde‡
__USE_LARGEFILE64


294 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

295 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

296 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

297 
__c⁄°
 *
__ª°ri˘
 
__modes
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

301 #ifdef 
__USE_POSIX


303 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

306 #ifdef 
__USE_GNU


309 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

310 
__c⁄°
 *
__ª°ri˘
 
__modes
,

311 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

314 #ifde‡
__USE_XOPEN2K8


316 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

317 
__THROW
 
__wur
;

322 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

326 
__BEGIN_NAMESPACE_STD


329 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

333 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

334 
__modes
, 
size_t
 
__n
Ë
__THROW
;

335 
__END_NAMESPACE_STD


337 #ifdef 
__USE_BSD


340 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

341 
size_t
 
__size
Ë
__THROW
;

344 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

348 
__BEGIN_NAMESPACE_STD


353 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

354 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

359 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

361 
	$•rötf
 (*
__ª°ri˘
 
__s
,

362 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

368 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

369 
_G_va_li°
 
__¨g
);

374 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

376 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

377 
_G_va_li°
 
__¨g
Ë
__THROW
;

378 
__END_NAMESPACE_STD


380 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


381 
__BEGIN_NAMESPACE_C99


383 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

384 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

385 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

387 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

388 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

389 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

390 
__END_NAMESPACE_C99


393 #ifde‡
__USE_GNU


396 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

397 
_G_va_li°
 
__¨g
)

398 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

399 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

400 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

401 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

402 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

403 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

404 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

407 #ifde‡
__USE_XOPEN2K8


414 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

415 
_G_va_li°
 
__¨g
)

416 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

417 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

418 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

422 
__BEGIN_NAMESPACE_STD


427 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

428 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

433 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

435 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

436 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

438 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

439 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

440 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

441 #ifde‡
__REDIRECT


445 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

446 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

447 
__isoc99_fsˇnf
Ë
__wur
;

448 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

449 
__isoc99_sˇnf
Ë
__wur
;

450 
	`__REDIRECT_NTH
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

451 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

452 
__isoc99_ssˇnf
);

454 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

455 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

456 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

457 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

458 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

459 
	#fsˇnf
 
__isoc99_fsˇnf


	)

460 
	#sˇnf
 
__isoc99_sˇnf


	)

461 
	#ssˇnf
 
__isoc99_ssˇnf


	)

465 
__END_NAMESPACE_STD


467 #ifdef 
__USE_ISOC99


468 
__BEGIN_NAMESPACE_C99


473 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

474 
_G_va_li°
 
__¨g
)

475 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

481 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

482 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

485 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

486 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

487 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

489 #i‡!
deföed
 
__USE_GNU
 \

490 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

491 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

492 #ifde‡
__REDIRECT


496 
	`__REDIRECT
 (
vfsˇnf
,

497 (
FILE
 *
__ª°ri˘
 
__s
,

498 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

499 
__isoc99_vfsˇnf
)

500 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

501 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

502 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

503 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

504 
	`__REDIRECT_NTH
 (
vssˇnf
,

505 (
__c⁄°
 *
__ª°ri˘
 
__s
,

506 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

507 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

508 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

510 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

511 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

512 
_G_va_li°
 
__¨g
Ë
__wur
;

513 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

514 
_G_va_li°
 
__¨g
Ë
__wur
;

515 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

516 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

517 
_G_va_li°
 
__¨g
Ë
__THROW
;

518 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

519 
	#vsˇnf
 
__isoc99_vsˇnf


	)

520 
	#vssˇnf
 
__isoc99_vssˇnf


	)

524 
__END_NAMESPACE_C99


528 
__BEGIN_NAMESPACE_STD


533 
	`fgëc
 (
FILE
 *
__°ªam
);

534 
	`gëc
 (
FILE
 *
__°ªam
);

540 
	`gëch¨
 ();

541 
__END_NAMESPACE_STD


545 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

547 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


552 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

553 
	`gëch¨_u∆ocked
 ();

556 #ifde‡
__USE_MISC


563 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

567 
__BEGIN_NAMESPACE_STD


575 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

576 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

582 
	`putch¨
 (
__c
);

583 
__END_NAMESPACE_STD


587 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

589 #ifde‡
__USE_MISC


596 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

599 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


604 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

605 
	`putch¨_u∆ocked
 (
__c
);

609 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

610 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

612 
	`gëw
 (
FILE
 *
__°ªam
);

615 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

619 
__BEGIN_NAMESPACE_STD


624 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

625 
__wur
;

632 *
	$gës
 (*
__s
Ë
__wur
;

633 
__END_NAMESPACE_STD


635 #ifde‡
__USE_GNU


642 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

643 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

647 #ifdef 
__USE_XOPEN2K8


658 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

659 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

660 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

661 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

662 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

663 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

671 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

672 
size_t
 *
__ª°ri˘
 
__n
,

673 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

677 
__BEGIN_NAMESPACE_STD


682 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

688 
	`puts
 (
__c⁄°
 *
__s
);

695 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

702 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

703 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

708 
size_t
 
	`fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

709 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
);

710 
__END_NAMESPACE_STD


712 #ifde‡
__USE_GNU


719 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

720 
FILE
 *
__ª°ri˘
 
__°ªam
);

723 #ifde‡
__USE_MISC


730 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

731 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

732 
size_t
 
	`fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, size_à
__size
,

733 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
);

737 
__BEGIN_NAMESPACE_STD


742 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

747 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

752 
	`ªwöd
 (
FILE
 *
__°ªam
);

753 
__END_NAMESPACE_STD


760 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


761 #i‚de‡
__USE_FILE_OFFSET64


766 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

771 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

773 #ifde‡
__REDIRECT


774 
	`__REDIRECT
 (
f£eko
,

775 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

776 
f£eko64
);

777 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

779 
	#f£eko
 
f£eko64


	)

780 
	#·ñlo
 
·ñlo64


	)

785 
__BEGIN_NAMESPACE_STD


786 #i‚de‡
__USE_FILE_OFFSET64


791 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

796 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

798 #ifde‡
__REDIRECT


799 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

800 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

801 
	`__REDIRECT
 (
f£ços
,

802 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

804 
	#fgëpos
 
fgëpos64


	)

805 
	#f£ços
 
f£ços64


	)

808 
__END_NAMESPACE_STD


810 #ifde‡
__USE_LARGEFILE64


811 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

812 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

813 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

814 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

817 
__BEGIN_NAMESPACE_STD


819 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

821 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

823 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

824 
__END_NAMESPACE_STD


826 #ifde‡
__USE_MISC


828 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

829 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

834 
__BEGIN_NAMESPACE_STD


839 
	`≥º‹
 (
__c⁄°
 *
__s
);

840 
__END_NAMESPACE_STD


846 
	~<bôs/sys_îæi°.h
>

849 #ifdef 
__USE_POSIX


851 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

854 #ifde‡
__USE_MISC


856 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

860 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

861 
deföed
 
__USE_MISC
)

866 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

872 
	`p˛o£
 (
FILE
 *
__°ªam
);

876 #ifdef 
__USE_POSIX


878 *
	$˘îmid
 (*
__s
Ë
__THROW
;

882 #ifde‡
__USE_XOPEN


884 *
	`cu£rid
 (*
__s
);

888 #ifdef 
__USE_GNU


889 
ob°ack
;

892 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

893 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

894 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

895 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

896 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

897 
_G_va_li°
 
__¨gs
)

898 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

902 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


906 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

910 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

913 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

916 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


920 
	#__√ed_gë›t


	)

921 
	~<gë›t.h
>

926 #ifde‡
__USE_EXTERN_INLINES


927 
	~<bôs/°dio.h
>

929 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


930 
	~<bôs/°dio2.h
>

932 #ifde‡
__LDBL_COMPAT


933 
	~<bôs/°dio-ldbl.h
>

936 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

501 || 
deföed
 
__USE_BSD


503 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

506 #ifde‡
__USE_XOPEN2K


508 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #ifde‡
__USE_GNU


524 #ifde‡
__˝lu•lus


525 "C++" 
	`©_quick_exô
 ((*
__func
) ())

526 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

528 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
__END_NAMESPACE_STD


533 #ifdef 
__USE_MISC


536 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

537 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
__BEGIN_NAMESPACE_STD


544 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

546 #ifde‡
__USE_GNU


552 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
__END_NAMESPACE_STD


556 #ifde‡
__USE_ISOC99


557 
__BEGIN_NAMESPACE_C99


560 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

561 
__END_NAMESPACE_C99


565 
__BEGIN_NAMESPACE_STD


567 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

568 
__END_NAMESPACE_STD


572 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

573 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

575 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


579 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


585 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

586 
__THROW
 
	`__n⁄nuŒ
 ((2));

589 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #ifdef 
__USE_MISC


596 
	$˛óªnv
 (Ë
__THROW
;

600 #i‡
deföed
 
__USE_MISC
 \

601 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

761 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

762 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

763 #ifde‡
__USE_GNU


764 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

766 
	`__n⁄nuŒ
 ((1, 4));

771 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

773 
__END_NAMESPACE_STD


775 #ifde‡
__USE_ISOC99


776 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

777 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

781 
__BEGIN_NAMESPACE_STD


785 
div_t
 
	$div
 (
__numî
, 
__díom
)

786 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
__END_NAMESPACE_STD


791 #ifde‡
__USE_ISOC99


792 
__BEGIN_NAMESPACE_C99


793 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

794 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__END_NAMESPACE_C99


800 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

801 || 
deföed
 
__USE_SVID


808 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

820 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

821 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

824 #ifde‡
__USE_MISC


826 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

827 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

829 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

839 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

840 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

841 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

846 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

847 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

848 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

857 
__BEGIN_NAMESPACE_STD


860 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

863 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

864 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

867 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

871 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

872 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

874 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

875 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

876 
__THROW
;

877 
__END_NAMESPACE_STD


880 #ifde‡
__USE_SVID


885 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


896 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

897 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

898 **
__ª°ri˘
 
__vÆuï
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

903 #ifde‡
__USE_XOPEN


905 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

911 #ifde‡
__USE_XOPEN2KXSI


913 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

916 #ifde‡
__USE_XOPEN


921 
	$gø¡±
 (
__fd
Ë
__THROW
;

925 
	$u∆ock±
 (
__fd
Ë
__THROW
;

930 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

933 #ifde‡
__USE_GNU


937 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

938 
__THROW
 
	`__n⁄nuŒ
 ((2));

941 
	`gë±
 ();

944 #ifde‡
__USE_BSD


948 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

97 #unde‡
__USE_ISOC99


98 #unde‡
__USE_ISOC95


99 #unde‡
__USE_POSIX


100 #unde‡
__USE_POSIX2


101 #unde‡
__USE_POSIX199309


102 #unde‡
__USE_POSIX199506


103 #unde‡
__USE_XOPEN


104 #unde‡
__USE_XOPEN_EXTENDED


105 #unde‡
__USE_UNIX98


106 #unde‡
__USE_XOPEN2K


107 #unde‡
__USE_XOPEN2KXSI


108 #unde‡
__USE_XOPEN2K8


109 #unde‡
__USE_XOPEN2K8XSI


110 #unde‡
__USE_LARGEFILE


111 #unde‡
__USE_LARGEFILE64


112 #unde‡
__USE_FILE_OFFSET64


113 #unde‡
__USE_BSD


114 #unde‡
__USE_SVID


115 #unde‡
__USE_MISC


116 #unde‡
__USE_ATFILE


117 #unde‡
__USE_GNU


118 #unde‡
__USE_REENTRANT


119 #unde‡
__USE_FORTIFY_LEVEL


120 #unde‡
__FAVOR_BSD


121 #unde‡
__KERNEL_STRICT_NAMES


125 #i‚de‡
_LOOSE_KERNEL_NAMES


126 
	#__KERNEL_STRICT_NAMES


	)

130 
	#__USE_ANSI
 1

	)

139 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


140 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

141 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

143 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

148 #i‡
deföed
 
_BSD_SOURCE
 && \

149 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

150 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

151 
	#__FAVOR_BSD
 1

	)

155 #ifde‡
_GNU_SOURCE


156 #unde‡
_ISOC95_SOURCE


157 
	#_ISOC95_SOURCE
 1

	)

158 #unde‡
_ISOC99_SOURCE


159 
	#_ISOC99_SOURCE
 1

	)

160 #unde‡
_POSIX_SOURCE


161 
	#_POSIX_SOURCE
 1

	)

162 #unde‡
_POSIX_C_SOURCE


163 
	#_POSIX_C_SOURCE
 200809L

	)

164 #unde‡
_XOPEN_SOURCE


165 
	#_XOPEN_SOURCE
 700

	)

166 #unde‡
_XOPEN_SOURCE_EXTENDED


167 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

168 #unde‡
_LARGEFILE64_SOURCE


169 
	#_LARGEFILE64_SOURCE
 1

	)

170 #unde‡
_BSD_SOURCE


171 
	#_BSD_SOURCE
 1

	)

172 #unde‡
_SVID_SOURCE


173 
	#_SVID_SOURCE
 1

	)

174 #unde‡
_ATFILE_SOURCE


175 
	#_ATFILE_SOURCE
 1

	)

180 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

181 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

182 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

183 
	#_BSD_SOURCE
 1

	)

184 
	#_SVID_SOURCE
 1

	)

191 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

192 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

193 
	#__USE_ISOC99
 1

	)

197 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

198 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

199 
	#__USE_ISOC95
 1

	)

204 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

205 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

206 
	#_POSIX_SOURCE
 1

	)

207 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

208 
	#_POSIX_C_SOURCE
 2

	)

209 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

210 
	#_POSIX_C_SOURCE
 199506L

	)

211 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

212 
	#_POSIX_C_SOURCE
 200112L

	)

214 
	#_POSIX_C_SOURCE
 200809L

	)

216 
	#__USE_POSIX_IMPLICITLY
 1

	)

219 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


220 
	#__USE_POSIX
 1

	)

223 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


224 
	#__USE_POSIX2
 1

	)

227 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

228 
	#__USE_POSIX199309
 1

	)

231 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

232 
	#__USE_POSIX199506
 1

	)

235 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

236 
	#__USE_XOPEN2K
 1

	)

237 #unde‡
__USE_ISOC95


238 
	#__USE_ISOC95
 1

	)

239 #unde‡
__USE_ISOC99


240 
	#__USE_ISOC99
 1

	)

243 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

244 
	#__USE_XOPEN2K8
 1

	)

245 #unde‡
_ATFILE_SOURCE


246 
	#_ATFILE_SOURCE
 1

	)

249 #ifdef 
_XOPEN_SOURCE


250 
	#__USE_XOPEN
 1

	)

251 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

252 
	#__USE_XOPEN_EXTENDED
 1

	)

253 
	#__USE_UNIX98
 1

	)

254 #unde‡
_LARGEFILE_SOURCE


255 
	#_LARGEFILE_SOURCE
 1

	)

256 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

257 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

258 
	#__USE_XOPEN2K8
 1

	)

259 
	#__USE_XOPEN2K8XSI
 1

	)

261 
	#__USE_XOPEN2K
 1

	)

262 
	#__USE_XOPEN2KXSI
 1

	)

263 #unde‡
__USE_ISOC95


264 
	#__USE_ISOC95
 1

	)

265 #unde‡
__USE_ISOC99


266 
	#__USE_ISOC99
 1

	)

269 #ifde‡
_XOPEN_SOURCE_EXTENDED


270 
	#__USE_XOPEN_EXTENDED
 1

	)

275 #ifde‡
_LARGEFILE_SOURCE


276 
	#__USE_LARGEFILE
 1

	)

279 #ifde‡
_LARGEFILE64_SOURCE


280 
	#__USE_LARGEFILE64
 1

	)

283 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

284 
	#__USE_FILE_OFFSET64
 1

	)

287 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


288 
	#__USE_MISC
 1

	)

291 #ifdef 
_BSD_SOURCE


292 
	#__USE_BSD
 1

	)

295 #ifdef 
_SVID_SOURCE


296 
	#__USE_SVID
 1

	)

299 #ifdef 
_ATFILE_SOURCE


300 
	#__USE_ATFILE
 1

	)

303 #ifdef 
_GNU_SOURCE


304 
	#__USE_GNU
 1

	)

307 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


308 
	#__USE_REENTRANT
 1

	)

311 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0 \

312 && 
__GNUC_PREREQ
 (4, 1Ë&& 
deföed
 
	g__OPTIMIZE__
 && __OPTIMIZE__ > 0

313 #i‡
_FORTIFY_SOURCE
 > 1

314 
	#__USE_FORTIFY_LEVEL
 2

	)

316 
	#__USE_FORTIFY_LEVEL
 1

	)

319 
	#__USE_FORTIFY_LEVEL
 0

	)

323 
	~<bôs/¥edefs.h
>

326 
	#__STDC_ISO_10646__
 200009L

	)

334 #unde‡
__GNU_LIBRARY__


335 
	#__GNU_LIBRARY__
 6

	)

339 
	#__GLIBC__
 2

	)

340 
	#__GLIBC_MINOR__
 13

	)

342 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

343 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

346 #i‡
deföed
 
__GNUC__
 \

347 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

348 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

349 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

350 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

354 #i‚de‡
__ASSEMBLER__


355 #i‚de‡
_SYS_CDEFS_H


356 
	~<sys/cdefs.h
>

361 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


362 
	#__USE_LARGEFILE
 1

	)

363 
	#__USE_LARGEFILE64
 1

	)

369 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

370 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

371 && 
deföed
 
	g__exã∫_ölöe


372 
	#__USE_EXTERN_INLINES
 1

	)

377 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

378 && (
deföed
 
	g_LIBC
 || !deföed 
	g__OPTIMIZE_SIZE__
Ë&& !deföed 
	g__NO_INLINE__
 \

379 && 
deföed
 
	g__exã∫_ölöe


380 
	#__USE_EXTERN_INLINES_IN_LIBC
 1

	)

388 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
);

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

151 
	#_IO_SKIPWS
 01

	)

152 
	#_IO_LEFT
 02

	)

153 
	#_IO_RIGHT
 04

	)

154 
	#_IO_INTERNAL
 010

	)

155 
	#_IO_DEC
 020

	)

156 
	#_IO_OCT
 040

	)

157 
	#_IO_HEX
 0100

	)

158 
	#_IO_SHOWBASE
 0200

	)

159 
	#_IO_SHOWPOINT
 0400

	)

160 
	#_IO_UPPERCASE
 01000

	)

161 
	#_IO_SHOWPOS
 02000

	)

162 
	#_IO_SCIENTIFIC
 04000

	)

163 
	#_IO_FIXED
 010000

	)

164 
	#_IO_UNITBUF
 020000

	)

165 
	#_IO_STDIO
 040000

	)

166 
	#_IO_DONT_CLOSE
 0100000

	)

167 
	#_IO_BOOLALPHA
 0200000

	)

170 
_IO_jump_t
; 
	g_IO_FILE
;

173 #ifde‡
_IO_MTSAFE_IO


174 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

175 
	~<bôs/°dio-lock.h
>

180 
	t_IO_lock_t
;

186 
	s_IO_m¨kî
 {

187 
_IO_m¨kî
 *
	m_√xt
;

188 
_IO_FILE
 *
	m_sbuf
;

192 
	m_pos
;

194 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

195 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

196 
	mpublic
:

197 
°ªamm¨kî
(
°ªambuf
 *
sb
);

198 ~
°ªamm¨kî
();

199 
ßvög
(Ë{  
	m_•os
 == -2; }

200 
dñè
(
°ªamm¨kî
&);

201 
dñè
();

206 
	e__codecvt_ªsu…


208 
	m__codecvt_ok
,

209 
	m__codecvt_∑πül
,

210 
	m__codecvt_îr‹
,

211 
	m__codecvt_noc⁄v


214 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


217 
	s_IO_codecvt


219 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

220 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

221 
	m__mb°©e_t
 *,

222 c⁄° 
	mwch¨_t
 *,

223 c⁄° 
	mwch¨_t
 *,

224 c⁄° 
	mwch¨_t
 **, *,

226 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

227 
	m__mb°©e_t
 *, *,

229 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

230 
	m__mb°©e_t
 *,

232 c⁄° **, 
	mwch¨_t
 *,

233 
	mwch¨_t
 *, wchar_t **);

234 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

235 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

236 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

237 c⁄° *, c⁄° *, 
	m_IO_size_t
);

238 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

240 
_IO_ic⁄v_t
 
	m__cd_ö
;

241 
_IO_ic⁄v_t
 
	m__cd_out
;

245 
	s_IO_wide_d©a


247 
wch¨_t
 *
	m_IO_ªad_±r
;

248 
wch¨_t
 *
	m_IO_ªad_íd
;

249 
wch¨_t
 *
	m_IO_ªad_ba£
;

250 
wch¨_t
 *
	m_IO_wrôe_ba£
;

251 
wch¨_t
 *
	m_IO_wrôe_±r
;

252 
wch¨_t
 *
	m_IO_wrôe_íd
;

253 
wch¨_t
 *
	m_IO_buf_ba£
;

254 
wch¨_t
 *
	m_IO_buf_íd
;

256 
wch¨_t
 *
	m_IO_ßve_ba£
;

257 
wch¨_t
 *
	m_IO_backup_ba£
;

259 
wch¨_t
 *
	m_IO_ßve_íd
;

261 
__mb°©e_t
 
	m_IO_°©e
;

262 
__mb°©e_t
 
	m_IO_œ°_°©e
;

263 
_IO_codecvt
 
	m_codecvt
;

265 
wch¨_t
 
	m_sh‹tbuf
[1];

267 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

271 
	s_IO_FILE
 {

272 
	m_Êags
;

273 
	#_IO_fûe_Êags
 
_Êags


	)

277 * 
	m_IO_ªad_±r
;

278 * 
	m_IO_ªad_íd
;

279 * 
	m_IO_ªad_ba£
;

280 * 
	m_IO_wrôe_ba£
;

281 * 
	m_IO_wrôe_±r
;

282 * 
	m_IO_wrôe_íd
;

283 * 
	m_IO_buf_ba£
;

284 * 
	m_IO_buf_íd
;

286 *
	m_IO_ßve_ba£
;

287 *
	m_IO_backup_ba£
;

288 *
	m_IO_ßve_íd
;

290 
_IO_m¨kî
 *
	m_m¨kîs
;

292 
_IO_FILE
 *
	m_chaö
;

294 
	m_fûío
;

296 
	m_blksize
;

298 
	m_Êags2
;

300 
_IO_off_t
 
	m_ﬁd_off£t
;

302 
	#__HAVE_COLUMN


	)

304 
	m_cur_cﬁumn
;

305 sig√d 
	m_vèbÀ_off£t
;

306 
	m_sh‹tbuf
[1];

310 
_IO_lock_t
 *
	m_lock
;

311 #ifde‡
_IO_USE_OLD_IO_FILE


314 
	s_IO_FILE_com∂ëe


316 
_IO_FILE
 
	m_fûe
;

318 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

319 
_IO_off64_t
 
	m_off£t
;

320 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


322 
_IO_codecvt
 *
	m_codecvt
;

323 
_IO_wide_d©a
 *
	m_wide_d©a
;

324 
_IO_FILE
 *
	m_‰ìªs_li°
;

325 *
	m_‰ìªs_buf
;

326 
size_t
 
	m_‰ìªs_size
;

328 *
	m__∑d1
;

329 *
	m__∑d2
;

330 *
	m__∑d3
;

331 *
	m__∑d4
;

332 
size_t
 
	m__∑d5
;

334 
	m_mode
;

336 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

340 #i‚de‡
__˝lu•lus


341 
_IO_FILE
 
	t_IO_FILE
;

344 
	g_IO_FILE_∂us
;

346 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

347 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

349 #i‚de‡
_LIBC


350 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

351 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

352 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

354 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

355 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

356 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

364 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

372 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

373 
	tsize_t
 
	t__n
);

381 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

384 
	t__io_˛o£_‚
 (*
	t__cookõ
);

387 #ifde‡
_GNU_SOURCE


389 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

390 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

391 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

392 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

397 
__io_ªad_‚
 *
	mªad
;

398 
__io_wrôe_‚
 *
	mwrôe
;

399 
__io_£ek_‚
 *
	m£ek
;

400 
__io_˛o£_‚
 *
	m˛o£
;

401 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

402 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

404 
	g_IO_cookõ_fûe
;

407 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

408 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

412 #ifde‡
__˝lu•lus


416 
__undîÊow
 (
_IO_FILE
 *);

417 
__uÊow
 (
_IO_FILE
 *);

418 
__ovîÊow
 (
_IO_FILE
 *, );

419 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


420 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

421 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

422 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

425 #i‡ 
__GNUC__
 >= 3

426 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

431 
	#_IO_gëc_u∆ocked
(
_Â
) \

432 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

433 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

434 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

435 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

436 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

437 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

438 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

439 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

440 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

441 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

443 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


444 
	#_IO_gëwc_u∆ocked
(
_Â
) \

445 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

446 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

447 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

448 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

449 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

450 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

451 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

452 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

453 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

454 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

457 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

458 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

460 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

461 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

462 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

463 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

468 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

469 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

471 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

472 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

473 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 #ifde‡
_IO_MTSAFE_IO


476 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

477 
	#_IO_Êockfûe
(
_Â
) \

478 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

479 
	#_IO_fu∆ockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

482 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

483 
	#_IO_Êockfûe
(
_Â
Ë

	)

484 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

485 
	#_IO_·rylockfûe
(
_Â
Ë

	)

486 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

487 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

490 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

491 
_IO_va_li°
, *
__ª°ri˘
);

492 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

493 
_IO_va_li°
);

494 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

495 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

497 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

498 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

500 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

502 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


503 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

504 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

505 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

506 #i‡
__GNUC__
 >= 2

509 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


510 
	~<shlib-com∑t.h
>

511 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

512 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

513 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

514 c⁄° 
_IO_°dö_u£d
;

515 
wók_exã∫
 (
_IO_°dö_u£d
);

518 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


519 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

523 
	#_IO_fwide
(
__Â
, 
__mode
) \

524 ({ 
__ªsu…
 = (
__mode
); \

525 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

527 i‡((
__Â
)->
_mode
 == 0) \

529 (
__Â
)->
_mode
 = -1; \

530 
__ªsu…
 = (
__Â
)->
_mode
; \

532 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

533 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

535 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

536 
__ªsu…
; })

	)

539 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

540 
_IO_va_li°
, *
__ª°ri˘
);

541 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

542 
_IO_va_li°
);

543 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

544 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

547 #ifde‡
__LDBL_COMPAT


548 
	~<bôs/libio-ldbl.h
>

551 #ifde‡
__˝lu•lus


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

88 
	#__is˘y≥
(
c
, 
ty≥
) \

89 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

91 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

92 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

94 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

96 
__BEGIN_NAMESPACE_STD


102 
	`__ex˘y≥
 (
iß um
);

103 
	`__ex˘y≥
 (
ißÕha
);

104 
	`__ex˘y≥
 (
is˙ål
);

105 
	`__ex˘y≥
 (
isdigô
);

106 
	`__ex˘y≥
 (
i¶owî
);

107 
	`__ex˘y≥
 (
isgøph
);

108 
	`__ex˘y≥
 (
i•röt
);

109 
	`__ex˘y≥
 (
i•un˘
);

110 
	`__ex˘y≥
 (
is•a˚
);

111 
	`__ex˘y≥
 (
isuµî
);

112 
	`__ex˘y≥
 (
isxdigô
);

116 
	$tﬁowî
 (
__c
Ë
__THROW
;

119 
	$touµî
 (
__c
Ë
__THROW
;

121 
__END_NAMESPACE_STD


125 #ifdef 
__USE_ISOC99


126 
__BEGIN_NAMESPACE_C99


128 
	`__ex˘y≥
 (
isbœnk
);

130 
__END_NAMESPACE_C99


133 #ifde‡
__USE_GNU


135 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

138 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


142 
	$ißscii
 (
__c
Ë
__THROW
;

146 
	$tﬂscii
 (
__c
Ë
__THROW
;

150 
	`__ex˘y≥
 (
_touµî
);

151 
	`__ex˘y≥
 (
_tﬁowî
);

155 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

156 (
__exãnsi⁄__
 \

157 ({ 
__ªs
; \

158 i‡( (
c
) > 1) \

160 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

162 
__c
 = (
c
); \

163 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

166 
__ªs
 = 
f
 
¨gs
; \

169 
__ªs
 = (
a
)[(Ë(
c
)]; \

170 
__ªs
; 
	}
}))

	)

172 #i‡!
deföed
 
__NO_CTYPE
 && !deföed 
__˝lu•lus


173 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

174 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

175 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

176 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

177 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

178 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

179 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

180 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

181 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

182 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

183 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

185 #ifde‡
__USE_ISOC99


186 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

189 #ifde‡
__USE_EXTERN_INLINES


190 
__exã∫_ölöe
 

191 
__NTH
 (
	$tﬁowî
 (
__c
))

193  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

194 
	}
}

196 
__exã∫_ölöe
 

197 
__NTH
 (
	$touµî
 (
__c
))

199  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

200 
	}
}

203 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


204 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

205 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

208 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


209 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

210 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

212 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

213 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

219 #ifde‡
__USE_XOPEN2K8


233 
	~<xloˇÀ.h
>

237 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

238 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

240 
	#__ex˘y≥_l
(
«me
) \

241 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

247 
__ex˘y≥_l
 (
iß um_l
);

248 
__ex˘y≥_l
 (
ißÕha_l
);

249 
__ex˘y≥_l
 (
is˙ål_l
);

250 
__ex˘y≥_l
 (
isdigô_l
);

251 
__ex˘y≥_l
 (
i¶owî_l
);

252 
__ex˘y≥_l
 (
isgøph_l
);

253 
__ex˘y≥_l
 (
i•röt_l
);

254 
__ex˘y≥_l
 (
i•un˘_l
);

255 
__ex˘y≥_l
 (
is•a˚_l
);

256 
__ex˘y≥_l
 (
isuµî_l
);

257 
__ex˘y≥_l
 (
isxdigô_l
);

259 
__ex˘y≥_l
 (
isbœnk_l
);

263 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

264 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

267 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

268 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

270 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


271 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

272 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

273 
	#__touµî_l
(
c
, 
loˇÀ
) \

274 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

275 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

276 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

280 #i‚de‡
__NO_CTYPE


281 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

282 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

283 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

284 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

285 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

286 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

287 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

288 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

289 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

290 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

291 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

293 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

295 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


296 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

297 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

300 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

301 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

302 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

303 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

304 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

305 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

306 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

307 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

308 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

309 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

310 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

312 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

314 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


315 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

316 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

323 
__END_DECLS


	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002

64 
	g__gc⁄v_°ï
;

65 
	g__gc⁄v_°ï_d©a
;

66 
	g__gc⁄v_lﬂded_obje˘
;

67 
	g__gc⁄v_å™s_d©a
;

71 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

72 
	t__c⁄°
 **, __const *,

73 **, 
	tsize_t
 *, , );

76 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

79 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

80 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

84 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

85 
	t__gc⁄v_°ï_d©a
 *, *,

86 
	t__c⁄°
 *,

87 
	t__c⁄°
 **,

88 
	t__c⁄°
 *, **,

89 
	tsize_t
 *);

92 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

93 
	t__c⁄°
 *,

97 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

98 
	tsize_t
 *);

101 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

102 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

104 
	s__gc⁄v_å™s_d©a


107 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

108 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

109 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

110 *
__d©a
;

111 
__gc⁄v_å™s_d©a
 *
__√xt
;

116 
	s__gc⁄v_°ï


118 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

119 
__c⁄°
 *
__mod«me
;

121 
__cou¡î
;

123 *
__‰om_«me
;

124 *
__to_«me
;

126 
__gc⁄v_f˘
 
__f˘
;

127 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

128 
__gc⁄v_öô_f˘
 
__öô_f˘
;

129 
__gc⁄v_íd_f˘
 
__íd_f˘
;

133 
__mö_√eded_‰om
;

134 
__max_√eded_‰om
;

135 
__mö_√eded_to
;

136 
__max_√eded_to
;

139 
__°©eful
;

141 *
__d©a
;

146 
	s__gc⁄v_°ï_d©a


148 *
__outbuf
;

149 *
__outbu„nd
;

153 
__Êags
;

157 
__övoˇti⁄_cou¡î
;

161 
__öã∫Æ_u£
;

163 
__mb°©e_t
 *
__°©ï
;

164 
__mb°©e_t
 
__°©e
;

168 
__gc⁄v_å™s_d©a
 *
__å™s
;

173 
	s__gc⁄v_öfo


175 
size_t
 
__n°ïs
;

176 
__gc⁄v_°ï
 *
__°ïs
;

177 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

178 } *
	t__gc⁄v_t
;

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s1
,

323 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

324 
__THROW
 
__©åibuã_puª__
;

327 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

328 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

332 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

333 
__THROW
;

336 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

337 
__END_NAMESPACE_STD


339 #ifde‡
__USE_GNU


342 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

343 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

344 
__THROW
;

348 
__BEGIN_NAMESPACE_STD


351 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

355 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

359 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

363 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

364 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

365 
mb°©e_t
 *
__p
Ë
__THROW
;

368 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

369 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

372 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

373 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

374 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

375 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

376 
__END_NAMESPACE_STD


378 #ifde‡
__USE_EXTERN_INLINES


384 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

385 
__exã∫_ölöe
 
wöt_t


386 
	`__NTH
 (
	$btowc
 (
__c
))

387 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

388 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

390 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

391 
__exã∫_ölöe
 

392 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

393 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

394 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

396 
__exã∫_ölöe
 
size_t


397 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

398 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

399 {  (
__ps
 !
NULL


400 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

403 
__BEGIN_NAMESPACE_STD


406 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

407 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

408 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

412 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

413 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

414 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

415 
__END_NAMESPACE_STD


418 #ifdef 
__USE_XOPEN2K8


421 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

422 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

423 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

427 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

428 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

429 
size_t
 
__nwc
, size_à
__Àn
,

430 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

435 #ifde‡
__USE_XOPEN


437 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

441 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

445 
__BEGIN_NAMESPACE_STD


448 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

449 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

450 
__END_NAMESPACE_STD


452 #ifde‡
__USE_ISOC99


453 
__BEGIN_NAMESPACE_C99


455 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

456 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

457 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

458 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

459 
__END_NAMESPACE_C99


463 
__BEGIN_NAMESPACE_STD


466 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

467 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

471 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

472 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

473 
__THROW
;

474 
__END_NAMESPACE_STD


476 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

477 
__BEGIN_NAMESPACE_C99


480 
__exãnsi⁄__


481 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

482 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

483 
__THROW
;

487 
__exãnsi⁄__


488 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

489 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

490 
__ba£
Ë
__THROW
;

491 
__END_NAMESPACE_C99


494 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


497 
__exãnsi⁄__


498 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

499 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

500 
__THROW
;

504 
__exãnsi⁄__


505 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

506 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

507 
__ba£
Ë
__THROW
;

510 #ifde‡
__USE_GNU


524 
	~<xloˇÀ.h
>

528 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

529 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

530 
__loˇÀ_t
 
__loc
Ë
__THROW
;

532 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

533 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

534 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

536 
__exãnsi⁄__


537 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

538 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

539 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

541 
__exãnsi⁄__


542 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

543 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

544 
__ba£
, 
__loˇÀ_t
 
__loc
)

545 
__THROW
;

547 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

548 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

549 
__THROW
;

551 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

552 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
;

555 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

556 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

557 
__loˇÀ_t
 
__loc
Ë
__THROW
;

562 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

563 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

567 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

568 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

569 
__THROW
;

575 #ifdef 
__USE_XOPEN2K8


578 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

581 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


582 
__BEGIN_NAMESPACE_STD


585 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

592 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

593 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

599 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

602 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

603 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

604 
__THROW
 ;

610 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

611 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

612 
__gnuc_va_li°
 
__¨g
)

618 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

619 
__gnuc_va_li°
 
__¨g
)

623 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

624 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

625 
__gnuc_va_li°
 
__¨g
)

626 
__THROW
 ;

633 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

634 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

640 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

643 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

644 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

645 
__THROW
 ;

647 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

648 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

649 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

650 #ifde‡
__REDIRECT


654 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

655 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

656 
__isoc99_fwsˇnf
)

658 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

659 
__isoc99_wsˇnf
)

661 
	`__REDIRECT_NTH
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

662 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

663 ...), 
__isoc99_swsˇnf
)

666 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

667 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

669 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

670 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

671 
__THROW
;

672 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

673 
	#wsˇnf
 
__isoc99_wsˇnf


	)

674 
	#swsˇnf
 
__isoc99_swsˇnf


	)

678 
__END_NAMESPACE_STD


681 #ifde‡
__USE_ISOC99


682 
__BEGIN_NAMESPACE_C99


687 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

688 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

689 
__gnuc_va_li°
 
__¨g
)

695 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

696 
__gnuc_va_li°
 
__¨g
)

699 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

700 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

701 
__gnuc_va_li°
 
__¨g
)

702 
__THROW
 ;

704 #i‡!
deföed
 
__USE_GNU
 \

705 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

706 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

707 #ifde‡
__REDIRECT


708 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

709 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

710 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

712 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

713 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

715 
	`__REDIRECT_NTH
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

716 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

717 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

720 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

721 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

722 
__gnuc_va_li°
 
__¨g
);

723 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

724 
__gnuc_va_li°
 
__¨g
);

725 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

726 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

727 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

728 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

729 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

730 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

734 
__END_NAMESPACE_C99


738 
__BEGIN_NAMESPACE_STD


743 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

744 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

750 
wöt_t
 
	`gëwch¨
 ();

757 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

758 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

764 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

772 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

773 
__FILE
 *
__ª°ri˘
 
__°ªam
);

779 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

780 
__FILE
 *
__ª°ri˘
 
__°ªam
);

787 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

788 
__END_NAMESPACE_STD


791 #ifde‡
__USE_GNU


799 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

800 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

808 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

816 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

826 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

835 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

836 
__FILE
 *
__ª°ri˘
 
__°ªam
);

844 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

845 
__FILE
 *
__ª°ri˘
 
__°ªam
);

849 
__BEGIN_NAMESPACE_C99


853 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

854 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

855 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

856 
__END_NAMESPACE_C99


858 #ifde‡
__USE_GNU


859 
	~<xloˇÀ.h
>

863 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

864 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

865 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

866 
__loˇÀ_t
 
__loc
Ë
__THROW
;

875 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


876 
	#__√ed_iswxxx


	)

877 
	~<w˘y≥.h
>

881 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


882 
	~<bôs/wch¨2.h
>

885 #ifde‡
__LDBL_COMPAT


886 
	~<bôs/wch¨-ldbl.h
>

889 
__END_DECLS


897 #unde‡
__√ed_mb°©e_t


898 #unde‡
__√ed_wöt_t


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@
1
.
1
/usr/include
41
662
dqueue.h
dqueue/dqueue.c
dqueue/dqueue.c.c
dqueue/dqueue.h
dqueue/test.c
list.c
list.h
list/clist.c
list/clist.h
list/list.c
list/list.h
list/llist.c
list/llist.h
list_1.c
queue/haha.c
queue/main.c
queue/palindrome.c
queue/queue.c
queue/queue.h
queue/stack.c
queue/stack.h
queue/test.c
stack/stack.c
stack/stack.h
stack/test.c
test.c
/usr/include/errno.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/time.h
/usr/include/alloca.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/ctype.h
/usr/include/endian.h
/usr/include/gconv.h
/usr/include/wchar.h
/usr/include/wctype.h
